{"searchDocs":[{"title":"Estilo Arquitetural","type":0,"sectionRef":"#","url":"/docs/arquitetura/estilo-arquitetural","content":"Estilo Arquitetural Estilo Arquitetural descreve uma relação, nomeada, de componentes cobrindo uma variedade de características da arquitetura. O nome de um estilo arquitetural, cria um nome único que funciona como uma abreviatura entre arquitetos experientes. Cada nome captura os detalhes daquela arquitetura. Um estilo arquitetural descreve a topologia, as características padrão da arquitetura (benéficas ou prejudiciais). Referência Fundamentas of Software Architecture - Capítulo 9 - Mark Richards e Neal Ford.","keywords":"","version":"Next"},{"title":"Classe","type":0,"sectionRef":"#","url":"/docs/classe","content":"","keywords":"","version":"Next"},{"title":"Referência​","type":1,"pageTitle":"Classe","url":"/docs/classe#referência","content":" Cherry Ramatis - Ending the war or continuing it? Let's bring functional programming to OOP codebases ","version":"Next","tagName":"h2"},{"title":"Data Drift e Concept Drift","type":0,"sectionRef":"#","url":"/docs/dados/data-drif","content":"Data Drift e Concept Drift Data drift é um fenômeno em que os dados usados para treinar um modelo de ML mudam com o tempo. data drift = detecção de diferença. Diferenças entre data drift e concept drift: Data drift: mudança na distribuição dos dados;Concept drift: mudança na relação entre os dados e a variável alvo;Resolução: O data drift pode ser resolvido atualizando os dados do modelo. O concept drift pode ser resolvido refazendo o modelo. Dicas para lidar com o data drift e o concept drift: Monitore os dados: monitorar os dados usados para treinar os modelos para detectar sinais de drift.Atualize os dados regularmente: Os modelos devem ser atualizados regularmente com novos dados;Refaça os modelos: Se o concept drift for severo, o modelo pode precisar ser refeito completamente.","keywords":"","version":"Next"},{"title":"DataOps","type":0,"sectionRef":"#","url":"/docs/dados/DataOps","content":"DataOps É um conjunto de práticas, processos e tecnologias que combina uma perspectiva integrada e orientada a processos sobre dados com automação e métodos de engenharia de software ágil para melhorar a qualidade, velocidade e colaboração além de promover uma cultura de melhoria contínua na área de análise de dados. Princípios: Satisfação contínua do cliente;Foco em análises relevantes;Abraçar a mudança;Interações diárias;Redução de heroísmo;Ter reprodutibilidade;Aplicar monitoramento;Melhorar o cycle time. Motivos para ter uma cultura DataOps: Processos mais ágeis;Insights em tempo real;Democratização das informações;Foco estratégico;Alinhamento entre negócios e TI.","keywords":"","version":"Next"},{"title":"Estatística Descritiva vs Inferência Estatística","type":0,"sectionRef":"#","url":"/docs/estatistica/inferencia-vs-descritiva","content":"Estatística Descritiva vs Inferência Estatística Estatística Descritiva Trata da organização, resumo e análise dos dados. Estatística Inferencial Estatística Inferencial ou Inferência Estatística trabalha obtendo conclusões sobre a população a partir da amostra.","keywords":"","version":"Next"},{"title":"MLOps","type":0,"sectionRef":"#","url":"/docs/dados/MLOps","content":"","keywords":"","version":"Next"},{"title":"Fases de MLOps​","type":1,"pageTitle":"MLOps","url":"/docs/dados/MLOps#fases-de-mlops","content":"   ","version":"Next","tagName":"h2"},{"title":"Fase 1: Design​","type":1,"pageTitle":"MLOps","url":"/docs/dados/MLOps#fase-1-design","content":" É dedicada ao entendimento do negócio, dados e software.  Identifica-se o usuário em potencial, projetamos a solução de aprendizado de máquina para rer seu problema e avaliamos o desenvolvimento do projeto; Atua-se dentro de duas categorias de problemas: aumentando a produtividade do usuário;aumentando a interatividade de nossa aplicação. Inicialmente, define-se os casos de uso de ML e os priorizamos. A melhor prática é trabalhar em um caso de uso de ML por vez. A fase visa inspecionar os dados disponíveis que serão necessários para treinar o modelo e especificar os requisitos funcionais e não funcionais. Deve-se usar esses requisitos para projetar a arquitetura do aplicativo de ML e criar um conjunto de testes.  ","version":"Next","tagName":"h3"},{"title":"Fase 2 - Desenvolvimento do Modelo​","type":1,"pageTitle":"MLOps","url":"/docs/dados/MLOps#fase-2---desenvolvimento-do-modelo","content":" Essa fase é dedicada a verificar a aplicabilidade do ML para o problema, POCs de ML; Executa-se, etapas iterativamente diferentes, como identificar ou melhorar o algoritmo de ML adequado, engenharia de dados e/ou modelos; O objetivo principal nessa fase é fornecer um modelo de ML de qualidade estável que será executado em produção.  ","version":"Next","tagName":"h3"},{"title":"Fase 3 - Operação​","type":1,"pageTitle":"MLOps","url":"/docs/dados/MLOps#fase-3---operação","content":" O foco: entregar o modelo de ML em produção usando práticas de DevOps;Todas as três fases estão interligadas e influenciam umas às outras;Uma decisão de design se propaga para a fase de experimentação e, finalmente, influenciará as opções de implantação durante a fase final;Exemplo: escolha de framework para desenvolvimento.  ","version":"Next","tagName":"h3"},{"title":"Princípios de MLOps​","type":1,"pageTitle":"MLOps","url":"/docs/dados/MLOps#princípios-de-mlops","content":" ","version":"Next","tagName":"h2"},{"title":"Automação​","type":1,"pageTitle":"MLOps","url":"/docs/dados/MLOps#automação","content":" O nível de automação das pipelines determina a maturidade do processo de ML. Com o aumento da maturidade, aumento de velocidade;  O objetivo de uma equipe de MLOps é automatizar a implantação de modelos de ML; Pode ser usado diversos gatilhos para treinamento e implantação do modelo. O teste automatizado ajuda a descobrir problemas rapidamente; Permite a correção rápida de erros; Para adotar o MLOps, vemos três níveis de automação: Treinamento e implantação manual do modelo;Execução automática de pipelines de ML (treino);Pipelines de CI/CD.  ","version":"Next","tagName":"h3"},{"title":"Continuous X​","type":1,"pageTitle":"MLOps","url":"/docs/dados/MLOps#continuous-x","content":" Ativos de ML = modelo + parâmetros + ** hiperparâmetros** + scripts de treinamento + dados de treinamento/teste; Um serviço de implantação fornece orquestração, registro, monitoramento e notificação para garantir que os modelos de ML, o código e os artefatos de dados sejam estáveis. Integração Contínua (CI): estende o código e os componentes de teste e validação, adicionando dados e modelos de teste e validação. Entrega Contínua (CD): se preocupa com a entrega de uma pipeline de treinamento de ML que implanta automaticamente outro serviço de previsão do modelo de ML. Treinamento Contínuo (CT): é exclusivo da propriedade de sistemas de ML, que retreina automaticamente os modelos de ML para reimplantação. Monitoramento Contínuo (CM): se preocupa com o monitoramento de dados de produção e métricas de desempenho do modelo, que estão vinculados às métricas de negócios.  ","version":"Next","tagName":"h3"},{"title":"Treinamento Contínuo​","type":1,"pageTitle":"MLOps","url":"/docs/dados/MLOps#treinamento-contínuo","content":" É a busca por treinar um modelo de ML automaticamente; Podem ter gatilhos para iniciar o treino: Atualização no código;Atualização no dado;Ocorrência de um intervalo de tempo;Disparo manual. Nesses casos, para aumentar a automação, usa-se AutoML; O sucesso depende crucialmente de especialistas em ML para executar as seguintes tarefas: Pré-processamento e limpeza dos dados;Seleção e construção de features apropriadas;Seleção de uma família de modelos apropriada;Otimização dos hiperparâmetros do modelo;Analisar criticamente os resultados obtidos.  ","version":"Next","tagName":"h3"},{"title":"Versionamento​","type":1,"pageTitle":"MLOps","url":"/docs/dados/MLOps#versionamento","content":" O objetivo é tratar scripts de treinamento de ML, modelos de ML e conjuntos de dados como foco nos processos de DevOps; Neste caso, usa-se controle de versão; Alguns dos motivos são os seguintes: Treinamento em novos datasets;Treinamento com novas abordagens.Os modelos podem se degradar com o tempo;Os modelos podem ser rapidamente revertidos para uma versão anterior;A conformidade corporativa ou governamental pode exigir auditoria;Os dados podem residir em vários sistemas;Os dados só podem residir em juridições restritas. Analogamente às melhores práticas para desenvolver sistemas de software confiáveis, toda especificação de modelo de ML (código de treinamento) deve passar por uma fase de revisão de código. Além disso, cada especificação de modelo de ML deve ser versionada para tornar o treinamento de modelos de ML auditável e reprodutível.  ","version":"Next","tagName":"h3"},{"title":"Rastreio de Experimentos​","type":1,"pageTitle":"MLOps","url":"/docs/dados/MLOps#rastreio-de-experimentos","content":" Processo altamente iterativo e centrado em pesquisa; Contrasta com o processo tradicional de desenvolvimento de software; Em ML, vários experimentos de treinamento de modelos podem ser executados em paralelo antes de tomar a decisão de qual modelo será promovido para produção.  ","version":"Next","tagName":"h3"},{"title":"Testes​","type":1,"pageTitle":"MLOps","url":"/docs/dados/MLOps#testes","content":" A pipeline completa inclui três componentes: Dados;Modelo de ML;Aplicação; Três escopos para testes em sistemas de ML: Recursos e dados;Desenvolvimento de modelos;Infraestrutura de ML.  ","version":"Next","tagName":"h3"},{"title":"Monitoramento​","type":1,"pageTitle":"MLOps","url":"/docs/dados/MLOps#monitoramento","content":" Depois que o modelo de ML for implantado, ele precisa ser monitorado para garantir que funcione conforme o esperado. Monitore as alterações de dependência ao longo de todo o pipeline resultando em notificação. Alteração da versão dos dados;Alterações no sistema de origem;Atualização de dependências; Monitore mudanças nos dados: criar alarmes se os dados não corresponderem ao esquema, que foi especificado na etapa de treinamento. Monitore a estabilidade numérica do modelo ML (ocorrências de NaNs ou Infinity). Monitore o desempenho computacional de um sistema de ML (CPU, GPU e RAM). Monitore a degradação da qualidade preditiva do modelo de ML nos dados servidos.  ","version":"Next","tagName":"h3"},{"title":"Reprodutibilidade​","type":1,"pageTitle":"MLOps","url":"/docs/dados/MLOps#reprodutibilidade","content":" Ideia principal:  Significa que todas as fases do processamento de dados, treinamento do modelo de ML e implantação do modelo de ML devem produzir resultados idênticos com a mesma entrada. Se temos os mesmos dados, mesmos modelos, mesmas configurações e mesmos ambientes, temos de ser capazes de produzir os mesmos artefatos. ","version":"Next","tagName":"h3"},{"title":"Django-Rest-Framework e a API de models do Django","type":0,"sectionRef":"#","url":"/docs/django/rest-framework-and-django-models","content":"Django-Rest-Framework e a API de models do Django O django-rest-framework possui serializers que se integram muito bem com os models do django, mas é importante ressaltar que o objetivo do rest-framework não é funcionar (e suportar) do mesmo modo a api de models do django e, portanto, algumas funcionalidades &quot;padrão&quot; podem se perder. Um exemplo disso, relatado em Issue #7159 no GitHub é o método clean() dentro do model. from django.core.exceptions import ValidationError from django.db import models from rest_framework import serializers from django import forms from django.test import TestCase class Sample(models.Model): title = models.CharField(max_length=50) def clean(self): raise ValidationError('') class SampleSerializer(serializers.ModelSerializer): class Meta: model = Sample fields = '__all__' class SampleForm(forms.ModelForm): class Meta: model = Sample fields = &quot;__all__&quot; class SampleTests(TestCase): def test_form(self): form = SampleForm({&quot;title&quot;: &quot;test&quot;}) self.assertFalse(form.is_valid()) def test_serializer(self): serializer = SampleSerializer(data={&quot;title&quot;: &quot;test&quot;}) self.assertFalse(serializer.is_valid()) ","keywords":"","version":"Next"},{"title":"Correlação Linear","type":0,"sectionRef":"#","url":"/docs/estatistica/regressão-linear/correlacao-linear","content":"","keywords":"","version":"Next"},{"title":"Coeficiente de Correlação​","type":1,"pageTitle":"Correlação Linear","url":"/docs/estatistica/regressão-linear/correlacao-linear#coeficiente-de-correlação","content":" Corr(x,y)=∑xi⋅yi−nxˉyˉ[∑xi2−nxˉ2]⋅[∑yi2−nyˉ2]\\text{Corr}(x, y) = \\dfrac{ \\displaystyle\\sum x_i \\cdot y_i - n\\bar{x}\\bar{y} }{ \\sqrt{ \\bigg[ \\displaystyle\\sum x_i^2 - n\\bar{x}^2 \\bigg ] \\cdot \\bigg[ \\displaystyle\\sum y_i^2 - n\\bar{y}^2 \\bigg ] } }Corr(x,y)=[∑xi2​−nxˉ2]⋅[∑yi2​−nyˉ​2]​∑xi​⋅yi​−nxˉyˉ​​ ","version":"Next","tagName":"h2"},{"title":"Acessibilidade e font-size","type":0,"sectionRef":"#","url":"/docs/front-end/accessibility-font-size","content":"","keywords":"","version":"Next"},{"title":"Referências​","type":1,"pageTitle":"Acessibilidade e font-size","url":"/docs/front-end/accessibility-font-size#referências","content":" Don’t use rem/em for paddings, margins and more ","version":"Next","tagName":"h2"},{"title":"Análise de Variância (ANOVA)","type":0,"sectionRef":"#","url":"/docs/estatistica/regressão-linear/anova","content":"","keywords":"","version":"Next"},{"title":"Tabela ANOVA​","type":1,"pageTitle":"Análise de Variância (ANOVA)","url":"/docs/estatistica/regressão-linear/anova#tabela-anova","content":" Variação\tSoma de Quadrado\tGraus de Liberdade\tErro Médio\tFRegressão\tSSRSS_RSSR​\t1\tMSR=SSRMS_R=SS_RMSR​=SSR​\tMSR/MSEMS_R/MS_EMSR​/MSE​ Residual\tSSESS_ESSE​\tn−2n-2n−2\tMSE=SSE/(n−1)MS_E=SS_E/(n-1)MSE​=SSE​/(n−1) Total\tSSTSS_TSST​\tn−1n-1n−1   ","version":"Next","tagName":"h2"},{"title":"Coeficiente de Determinação​","type":1,"pageTitle":"Análise de Variância (ANOVA)","url":"/docs/estatistica/regressão-linear/anova#coeficiente-de-determinação","content":" O coeficiente de determinação (ou lucro relativo) que se ganha ao introduzir o modelo, é dado por R2=SSRSSTR^2 = \\dfrac{SS_R}{SS_T}R2=SST​SSR​​ ","version":"Next","tagName":"h2"},{"title":"Regressão Linear Simples","type":0,"sectionRef":"#","url":"/docs/estatistica/regressão-linear/regressao-linear-simples","content":"","keywords":"","version":"Next"},{"title":"Visual​","type":1,"pageTitle":"Regressão Linear Simples","url":"/docs/estatistica/regressão-linear/regressao-linear-simples#visual","content":"   ","version":"Next","tagName":"h2"},{"title":"Fórmula​","type":1,"pageTitle":"Regressão Linear Simples","url":"/docs/estatistica/regressão-linear/regressao-linear-simples#fórmula","content":" y=β0+β1xy = \\beta_0 + \\beta_1 x y=β0​+β1​x  O objetivo é calcular β0\\beta_0β0​ e β1\\beta_1β1​.  Coeficientes β0\\beta_0β0​ é chamado de intercepto (coeficiente linear da reta). β1\\beta_1β1​ é chamado de inclinação (coeficiente angular da reta).reta.  Variáveis A variável yyy é chamada de variável dependente, ou resposta.A variável xxx é chamda de variável independente ou explicativa.  ","version":"Next","tagName":"h2"},{"title":"Determinação dos Parâmetros​","type":1,"pageTitle":"Regressão Linear Simples","url":"/docs/estatistica/regressão-linear/regressao-linear-simples#determinação-dos-parâmetros","content":" ","version":"Next","tagName":"h2"},{"title":"Inclinação​","type":1,"pageTitle":"Regressão Linear Simples","url":"/docs/estatistica/regressão-linear/regressao-linear-simples#inclinação","content":" β1=∑xiyi−(∑xi)⋅(∑yi)n∑xi2−(∑xi)2n\\beta_1 = \\dfrac{ \\displaystyle\\sum x_i y_i - \\dfrac{ \\big( \\displaystyle\\sum x_i \\big) \\cdot \\big( \\displaystyle\\sum y_i \\big) }{n} }{ \\displaystyle\\sum x_i^2 - \\dfrac{ \\big( \\sum x_i \\big)^2 }{n} }β1​=∑xi2​−n(∑xi​)2​∑xi​yi​−n(∑xi​)⋅(∑yi​)​​  ","version":"Next","tagName":"h3"},{"title":"Intercepto​","type":1,"pageTitle":"Regressão Linear Simples","url":"/docs/estatistica/regressão-linear/regressao-linear-simples#intercepto","content":" β0=yˉ−β1xˉ\\beta_0 = \\bar{y} - \\beta_1\\bar{x}β0​=yˉ​−β1​xˉ ","version":"Next","tagName":"h3"},{"title":"setup-user-event","type":0,"sectionRef":"#","url":"/docs/front-end/setup-user-event","content":"","keywords":"","version":"Next"},{"title":"Referências​","type":1,"pageTitle":"setup-user-event","url":"/docs/front-end/setup-user-event#referências","content":" Best Practices for Writing Tests with React Testing Library ","version":"Next","tagName":"h2"},{"title":"testing-forms-with-accessibility","type":0,"sectionRef":"#","url":"/docs/front-end/testing-forms-with-accessibility","content":"","keywords":"","version":"Next"},{"title":"Input's​","type":1,"pageTitle":"testing-forms-with-accessibility","url":"/docs/front-end/testing-forms-with-accessibility#inputs","content":" ","version":"Next","tagName":"h2"},{"title":"Componente​","type":1,"pageTitle":"testing-forms-with-accessibility","url":"/docs/front-end/testing-forms-with-accessibility#componente","content":" &lt;label htmlFor=&quot;name&quot;&gt;Name&lt;/label&gt; &lt;input id=&quot;name&quot; onChange={onFieldChange} placeholder=&quot;Enter your name&quot; /&gt;   ","version":"Next","tagName":"h3"},{"title":"Querying​","type":1,"pageTitle":"testing-forms-with-accessibility","url":"/docs/front-end/testing-forms-with-accessibility#querying","content":" user.type(screen.getByRole(&quot;textbox&quot;, { name: &quot;Name&quot; }), &quot;Test&quot;);   The { name: &quot;Name&quot; } query for acessible name and not for the input name property.  ","version":"Next","tagName":"h3"},{"title":"Submit Button​","type":1,"pageTitle":"testing-forms-with-accessibility","url":"/docs/front-end/testing-forms-with-accessibility#submit-button","content":" Use the *ByRole methods:  ","version":"Next","tagName":"h2"},{"title":"Componente​","type":1,"pageTitle":"testing-forms-with-accessibility","url":"/docs/front-end/testing-forms-with-accessibility#componente-1","content":" &lt;button type=&quot;submit&quot;&gt;Sign up&lt;/button&gt;   ","version":"Next","tagName":"h3"},{"title":"Querying​","type":1,"pageTitle":"testing-forms-with-accessibility","url":"/docs/front-end/testing-forms-with-accessibility#querying-1","content":" screen.getByRole(&quot;button&quot;, { name: &quot;Sign up&quot; });   The accessible name this time is the actual text content of the button. Note that if we add an aria-label to the button, the accessible name will be the text content of that aria-label.  ","version":"Next","tagName":"h3"},{"title":"Referências​","type":1,"pageTitle":"testing-forms-with-accessibility","url":"/docs/front-end/testing-forms-with-accessibility#referências","content":" Best Practices for Writing Tests with React Testing Library ","version":"Next","tagName":"h2"},{"title":"Funções Puras","type":0,"sectionRef":"#","url":"/docs/funcoes-puras","content":"","keywords":"","version":"Next"},{"title":"Referência​","type":1,"pageTitle":"Funções Puras","url":"/docs/funcoes-puras#referência","content":" Cherry Ramatis - Ending the war or continuing it? Let's bring functional programming to OOP codebases ","version":"Next","tagName":"h2"},{"title":"Sobre","type":0,"sectionRef":"#","url":"/docs/intro","content":"Sobre TODO: escrever aqui Introdução Esse é uma seção de anotações sobre diversos temas de estudo na área de tecnologia, ciências e matemática.","keywords":"","version":"Next"},{"title":"Introdução aos Micro Front-End's","type":0,"sectionRef":"#","url":"/docs/micro-front-end/introduction-to-micro-front-end","content":"","keywords":"","version":"Next"},{"title":"Características​","type":1,"pageTitle":"Introdução aos Micro Front-End's","url":"/docs/micro-front-end/introduction-to-micro-front-end#características","content":" A arquitetura de micro front-ends traz uma ideia parecida com microserviços para o front-end, com algumas características:  Maior independência entre os módulos;Arquitetura mais agnóstica a frameworks;Lógica pulverizada em vários projetos;Pipeline de build, test e deploys mais rápida;Assim como a arquitetura de micro serviços, adiciona uma complexidade a mais no projeto.  Os micro front-ends podem ser definidos, em [1], como:  &quot;An architectural style where independently deliverable frontend applications are composed into a greater whole&quot;    ","version":"Next","tagName":"h2"},{"title":"Exemplo Ilustrado​","type":1,"pageTitle":"Introdução aos Micro Front-End's","url":"/docs/micro-front-end/introduction-to-micro-front-end#exemplo-ilustrado","content":" Wireframe\tMicro front-end\t    ","version":"Next","tagName":"h2"},{"title":"Micro front-end's devem ter:​","type":1,"pageTitle":"Introdução aos Micro Front-End's","url":"/docs/micro-front-end/introduction-to-micro-front-end#micro-front-ends-devem-ter","content":" Baixo ou nenhum acoplamento entre os micro front-ends;Alta coesão;Não deve assumir responsabilidades de outro micro front-end;Não deve interferir ou ser interferido por outro micro front-end;Base de código independente;Pipeline de build, test e deploy separados e independentes.Times autônomos.    Pipeline de build, test e deploy separados e independentes      Times autônomos  ","version":"Next","tagName":"h2"},{"title":"Referências​","type":1,"pageTitle":"Introdução aos Micro Front-End's","url":"/docs/micro-front-end/introduction-to-micro-front-end#referências","content":" Micro Frontends ","version":"Next","tagName":"h2"},{"title":"findby-instead-waitfor","type":0,"sectionRef":"#","url":"/docs/front-end/findby-instead-waitfor","content":"","keywords":"","version":"Next"},{"title":"Componente​","type":1,"pageTitle":"findby-instead-waitfor","url":"/docs/front-end/findby-instead-waitfor#componente","content":" export const ListPage = () =&gt; { const [items, setItems] = useState([]); useEffect(() =&gt; { const loadItems = async () =&gt; { setTimeout(() =&gt; setItems([&quot;Item 1&quot;, &quot;Item 2&quot;]), 100); }; loadItems(); }, []); if (!items.length) { return &lt;div&gt;Loading...&lt;/div&gt;; } return ( &lt;div className=&quot;text-list__container&quot;&gt; &lt;h1&gt;List of items&lt;/h1&gt; &lt;ItemList items={items} /&gt; &lt;/div&gt; ); };   ","version":"Next","tagName":"h2"},{"title":"Test with waitFor​","type":1,"pageTitle":"findby-instead-waitfor","url":"/docs/front-end/findby-instead-waitfor#test-with-waitfor","content":" import { waitFor } from &quot;@testing-library/react&quot;; //... describe(&quot;ListPage&quot;, () =&gt; { it(&quot;renders without breaking&quot;, async () =&gt; { render(&lt;ListPage /&gt;); await waitFor(() =&gt; { expect( screen.getByRole(&quot;heading&quot;, { name: &quot;List of items&quot; }), ).toBeInTheDocument(); }); }); });   ","version":"Next","tagName":"h2"},{"title":"Test with findBy​","type":1,"pageTitle":"findby-instead-waitfor","url":"/docs/front-end/findby-instead-waitfor#test-with-findby","content":" describe(&quot;ListPage&quot;, () =&gt; { it(&quot;renders without breaking&quot;, async () =&gt; { render(&lt;ListPage /&gt;); expect( await screen.findByRole(&quot;heading&quot;, { name: &quot;List of items&quot; }), ).toBeInTheDocument(); }); });   ","version":"Next","tagName":"h2"},{"title":"Referências​","type":1,"pageTitle":"findby-instead-waitfor","url":"/docs/front-end/findby-instead-waitfor#referências","content":" Best Practices for Writing Tests with React Testing Library ","version":"Next","tagName":"h2"},{"title":"Don't Repeat Yourself","type":0,"sectionRef":"#","url":"/docs/patterns/dry","content":"","keywords":"","version":"Next"},{"title":"Acrônimo​","type":1,"pageTitle":"Don't Repeat Yourself","url":"/docs/patterns/dry#acrônimo","content":" No Pragmatic Programmer, é criado o acrônimo D.R.Y: Don't Repeat Yourself, que é:  Todo bloco de conhecimento deve ter uma representação única, sem ambiguidades e dominante num sistema.  ","version":"Next","tagName":"h2"},{"title":"Front-End e Componentização​","type":1,"pageTitle":"Don't Repeat Yourself","url":"/docs/patterns/dry#front-end-e-componentização","content":" A prática de componentização e uso de tokens no front-end é uma ótima maneira de evitar repetição de código.  ","version":"Next","tagName":"h2"},{"title":"É uma repetição?​","type":1,"pageTitle":"Don't Repeat Yourself","url":"/docs/patterns/dry#é-uma-repetição","content":" Repetir código é ruim, mas uma das formas de entender se um trecho de código é realmente uma duplicação é, de fato, pensar nos motivos para alterar esse trecho de código. Por exemplo: toda vez que um desses trechos for alterado, todos os outros deverão ser alterados também ou existe um mótivo pra alterar apenas um deles? Relacionado com SRP.  ","version":"Next","tagName":"h2"},{"title":"Referência​","type":1,"pageTitle":"Don't Repeat Yourself","url":"/docs/patterns/dry#referência","content":" Desbravando SOLID: Práticas avançadas para códigos de qualidade em Java moderno. Alexandre Aquiles. Casa do Código. Alura. ","version":"Next","tagName":"h2"},{"title":"Dependency Inversion Principle","type":0,"sectionRef":"#","url":"/docs/patterns/solid/dip","content":"","keywords":"","version":"Next"},{"title":"Acoplamento​","type":1,"pageTitle":"Dependency Inversion Principle","url":"/docs/patterns/solid/dip#acoplamento","content":" Uma classe com muitas dependências tem acoplamento com muitas outras classes. Além disso, o código acaba acoplado também às dependências das dependências e assim por diante.  Mudanças nas dependências, ou nas dependências das dependências, podem acabar se propagando para a classe que as utiliza. Precisamos ter atenção para evitar que dependências indesejadas se espalhem indevidamente pelo nosso código.  ","version":"Next","tagName":"h2"},{"title":"Acoplamento bom x Acoplamento ruim​","type":1,"pageTitle":"Dependency Inversion Principle","url":"/docs/patterns/solid/dip#acoplamento-bom-x-acoplamento-ruim","content":" Acoplamento precisa existir. Uma classe totalmente desacoplada é uma classe inútil.  Exemplo Num código Java desde o primeiro OlaMundo dependemos de String e System. Essas classes do pacote java.lang são estáveis: mudam muito pouco.  Classes estáveis têm essa característica porque milhões de projetos as usam e mudá-las teria um impacto gigantesco. Por isso, podemos depender delas tranquilamente. Esse é um acoplamento bom.  Depender de classes voláteis, por sua vez, é o acoplamento ruim.  ","version":"Next","tagName":"h3"},{"title":"Abstrações e Inversão das Dependências​","type":1,"pageTitle":"Dependency Inversion Principle","url":"/docs/patterns/solid/dip#abstrações-e-inversão-das-dependências","content":" Podemos usar classes abstratas e, preferencialmente, interfaces. Abstrações são estáveis: mudam muito menos que implementações.  Podemos também usar classes concretas como abstrações, desde que não deixemos detalhes de outras dependências vazarem.  Ao usarmos classes abstratas ou interfaces, o código não depende mais diretamente da dependência volátil e sim da abstração. E a dependência volátil, por sua vez, também depende da abstração, implementando-a. Por isso, podemos dizer que a dependência é invertida.  Devemos evitar que detalhes das dependências vazem nas nossas abstrações.  ","version":"Next","tagName":"h2"},{"title":"Abstrações conceitualmente abstratas​","type":1,"pageTitle":"Dependency Inversion Principle","url":"/docs/patterns/solid/dip#abstrações-conceitualmente-abstratas","content":" Devemos evitar criar abstrações vinculadas a tarefas muito particulares. Por exemplo:  public interface EnviadorSMS { void enviaNota(String mensagemNota, String telefoneClienteNota); }   Boas abstrações devem fornecer capacidades mais amplas, sem estarem atreladas a um uso muito específico.  ","version":"Next","tagName":"h2"},{"title":"Regras de Negócio x Detalhes​","type":1,"pageTitle":"Dependency Inversion Principle","url":"/docs/patterns/solid/dip#regras-de-negócio-x-detalhes","content":" ","version":"Next","tagName":"h2"},{"title":"Código de Alto Nível e Baixo Nível​","type":1,"pageTitle":"Dependency Inversion Principle","url":"/docs/patterns/solid/dip#código-de-alto-nível-e-baixo-nível","content":" Código de alto nível seriam os códigos que implementam regras de negócio.Código de baixo nível seriam os mecanismos de entrega, os detalhes de implementação mais técnicos.  Código de alto nível é aquele mais distante das entradas ou saídas do sistema e, por isso, muda menos frequentemente e por razões mais importantes, relacionadas ao negócio.  Já o código de baixo nível, mais próximo das entradas ou saídas, muda mais frequentemente e com mais urgência.  Alto ou baixo nível depende do contexto Para uma aplicação Web, o código SQL pode ser considerado um código de baixo nível, um detalhe de implementação, já que não está diretamente ligado às regras de negócio, mas à representação das entidades em um banco de dados relacional. Porém, para quem desenvolve um ORM, gerar código SQL comum entre os bancos de dados pode ser considerado alto nível, já que está relacionado ao problema que uma biblioteca de ORM resolve. Variações entre os bancos de dados, como AUTO_INCREMENT, SEQUENCE ou IDENTITY na geração de PK's, seriam detalhes de implementação de baixo nível.  ","version":"Next","tagName":"h3"},{"title":"O princípio da inversão de dependências​","type":1,"pageTitle":"Dependency Inversion Principle","url":"/docs/patterns/solid/dip#o-princípio-da-inversão-de-dependências","content":" Módulos de alto nível não devem depender de módulos de baixo nível. Ambos devem depender de abstrações. Abstrações não devem depender de detalhes. Detalhes devem depender de abstrações.  Exemplo Pense em uma arquitetura em três camadas: o código da camada de Apresentação depende do código da camada de Negócio que, por sua vez, depende do código da camada de Persistência. Essa arquitetura não atende ao DIP: código de alto nível (Negócio) depende de código de baixo nível (Persistência). Para atender ao DIP, teríamos que inserir abstrações na camada de Negócio para inverter as dependências, fazendo com que Persistência dependa de Negócio e não o contrário.  TODO: continuar aqui ","version":"Next","tagName":"h2"},{"title":"Formas de Implementação de Micro Front-End's","type":0,"sectionRef":"#","url":"/docs/micro-front-end/implementations-of-micro-front-end","content":"","keywords":"","version":"Next"},{"title":"Implementação em tempo de build​","type":1,"pageTitle":"Formas de Implementação de Micro Front-End's","url":"/docs/micro-front-end/implementations-of-micro-front-end#implementação-em-tempo-de-build","content":" Usar diversos projetos, por exemplo no npm, integrados por um projeto maior. Por exemplo, no package.json:  { &quot;name&quot;: &quot;@my-project/main&quot;, // ... &quot;dependencies&quot;: { &quot;@my-project/frontend-1&quot;: &quot;1.0.0&quot;, &quot;@my-project/frontend-2&quot;: &quot;1.0.0&quot;, &quot;@my-project/frontend-3&quot;: &quot;1.0.0&quot; } }   Um problema disso é que as pipelines de build, test e deploy não são separados e independentes.  ","version":"Next","tagName":"h2"},{"title":"Integração por meio de funções javascript​","type":1,"pageTitle":"Formas de Implementação de Micro Front-End's","url":"/docs/micro-front-end/implementations-of-micro-front-end#integração-por-meio-de-funções-javascript","content":" A ideia, dentro dessa forma de trabalho, é ter vários scripts (bundles) que disponibilizam funções para renderizar aquele micro front-end e, ter um script principal que gerencia chamada para essas funções. Um exemplo disso é:  &lt;script src=&quot;https://browse.example.com/bundle.js&quot;&gt;&lt;/script&gt; &lt;script src=&quot;https://order.example.com/bundle.js&quot;&gt;&lt;/script&gt; &lt;script src=&quot;https://profile.example.com/bundle.js&quot;&gt;&lt;/script&gt; &lt;div id=&quot;micro-frontend-root&quot;&gt;&lt;/div&gt; &lt;script type=&quot;text/javascript&quot;&gt; const microFrontEndsByRoute = { '/': window.renderBrowseRestaurants, '/order-food': window.renderOrderFood, '/user-profile': window.renderUserProfile, }; const renderFunction = microFrontendsByRoute[window.location.pathname]; renderFunction('micro-frontend-root'); &lt;/script&gt;   ","version":"Next","tagName":"h2"},{"title":"Integração através de web components​","type":1,"pageTitle":"Formas de Implementação de Micro Front-End's","url":"/docs/micro-front-end/implementations-of-micro-front-end#integração-através-de-web-components","content":" A estratégia para essa abordagem é definir web components nativos do browser para os micro front-ends:  &lt;!-- /about --&gt; &lt;div id=&quot;container&quot;&gt; &lt;about-micro-frontend&gt;&lt;/about-micro-frontend&gt; &lt;/div&gt;   &lt;!-- /products --&gt; &lt;div id=&quot;container&quot;&gt; &lt;products-micro-frontend&gt;&lt;/products-micro-frontend&gt; &lt;/div&gt;   Ao utilizar web components para criar micro front-ends, é possível utilizar qualquer uma das duas abordagens anteriores para executar os componentes.  ","version":"Next","tagName":"h2"},{"title":"Integração via iframes​","type":1,"pageTitle":"Formas de Implementação de Micro Front-End's","url":"/docs/micro-front-end/implementations-of-micro-front-end#integração-via-iframes","content":" &lt;!-- /about --&gt; &lt;div id=&quot;container&quot;&gt; &lt;iframe src=&quot;https://about.example.com&quot;&gt;&lt;/iframe&gt; &lt;/div&gt;   &lt;!-- /products --&gt; &lt;div id=&quot;container&quot;&gt; &lt;iframe src=&quot;https://products.example.com&quot;&gt;&lt;/iframe&gt; &lt;/div&gt;   ","version":"Next","tagName":"h2"},{"title":"Referências​","type":1,"pageTitle":"Formas de Implementação de Micro Front-End's","url":"/docs/micro-front-end/implementations-of-micro-front-end#referências","content":" Micro Frontends ","version":"Next","tagName":"h2"},{"title":"Single Responsibility Principle","type":0,"sectionRef":"#","url":"/docs/patterns/solid/srp","content":"","keywords":"","version":"Next"},{"title":"Classes Coesas​","type":1,"pageTitle":"Single Responsibility Principle","url":"/docs/patterns/solid/srp#classes-coesas","content":" Classes coesas têm uma característica semelhante: os conceitos que essas classes representam estariam relacionados e separá-los seria pouco natural. O SRP é uma outra maneira de falar sobre a necessidade de código coeso.  ","version":"Next","tagName":"h2"},{"title":"Encontrando classes pouco coesas​","type":1,"pageTitle":"Single Responsibility Principle","url":"/docs/patterns/solid/srp#encontrando-classes-pouco-coesas","content":" Para encontrar classes pouco coesas, devemos procurar por classes que:  possuem muitos métodos diferentes;são modificadas com frequência;não param nunca de crescer.    Um dos problemas de coesão mais comuns são Controllers que fazem coisas demais:  buscam dados no BD;implementam regras de negócio;enviam emails;chamam Web Services;enviam resultados para a View (o que realmente deveriam fazer).  ","version":"Next","tagName":"h3"},{"title":"Referência​","type":1,"pageTitle":"Single Responsibility Principle","url":"/docs/patterns/solid/srp#referência","content":" Desbravando SOLID: Práticas avançadas para códigos de qualidade em Java moderno. Alexandre Aquiles. Casa do Código. Alura. ","version":"Next","tagName":"h2"},{"title":"Eficiência","type":0,"sectionRef":"#","url":"/docs/ux/avaliacao/eficiencia","content":"Eficiência Algumas avaliações que são relacionadas a eficiência são: medições de tempo (tempo de realização da tarefa, tempo até o erro, etc);taxa de entrada de dados;quantidade de informações acessadas;frequência de uso;desvios da solução ótima.","keywords":"","version":"Next"},{"title":"Heurísticas","type":0,"sectionRef":"#","url":"/docs/ux/avaliacao/heuristicas","content":"Heurísticas O fluxo para uma avaliação com o uso de heurísticas é: Se familiarize com a lista de heurísticas.Se familiarize com a interface que vai ser avaliada.Crie uma lista de tarefas.Execute cada uma das tarefas.Avalie a interface de acordo com a lista de heurísticas.Classifique o problema de acordo com a severidade.Faça um relatório.","keywords":"","version":"Next"},{"title":"Regressão Linear Múltipla","type":0,"sectionRef":"#","url":"/docs/estatistica/regressão-linear/regressao-linear-multipla","content":"","keywords":"","version":"Next"},{"title":"Variáveis​","type":1,"pageTitle":"Regressão Linear Múltipla","url":"/docs/estatistica/regressão-linear/regressao-linear-multipla#variáveis","content":" yyy é a variável resposta.x1x_1x1​, x2x_2x2​, x3x_3x3​, …\\dots…, xkx_kxk​ são variáveis explicativas.  ","version":"Next","tagName":"h2"},{"title":"Forma Matricial​","type":1,"pageTitle":"Regressão Linear Múltipla","url":"/docs/estatistica/regressão-linear/regressao-linear-multipla#forma-matricial","content":" Y=[y1y2⋮yn]Y = \\begin{bmatrix} y_1 \\\\ y_2 \\\\ \\vdots\\\\ y_n \\end{bmatrix}Y=​y1​y2​⋮yn​​​  X=[1x11x12⋯x1k1x11x12⋯x1k⋮⋮⋮⋱⋮1xn1xn2⋯xnk]X = \\begin{bmatrix} 1 &amp; x_{11} &amp; x_{12} &amp; \\cdots &amp; x_{1k} \\\\ 1 &amp; x_{11} &amp; x_{12} &amp; \\cdots &amp; x_{1k} \\\\ \\vdots &amp; \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\ 1 &amp; x_{n1} &amp; x_{n2} &amp; \\cdots &amp; x_{nk} \\end{bmatrix}X=​11⋮1​x11​x11​⋮xn1​​x12​x12​⋮xn2​​⋯⋯⋱⋯​x1k​x1k​⋮xnk​​​  β=[β0β1⋮βk]\\beta = \\begin{bmatrix} \\beta_0 \\\\ \\beta_1 \\\\ \\vdots \\\\ \\beta_k \\end{bmatrix}β=​β0​β1​⋮βk​​​  Y=XβY=X\\betaY=Xβ  ","version":"Next","tagName":"h2"},{"title":"Solução​","type":1,"pageTitle":"Regressão Linear Múltipla","url":"/docs/estatistica/regressão-linear/regressao-linear-multipla#solução","content":" β^=(XTX)−1XTy\\hat{\\beta} = (X^TX)^{-1}X^Tyβ^​=(XTX)−1XTy  y^=Xβ^\\hat{y} = X\\hat{\\beta}y^​=Xβ^​ ","version":"Next","tagName":"h2"},{"title":"Insecure Direct Object Reference","type":0,"sectionRef":"#","url":"/docs/seguranca/idor","content":"","keywords":"","version":"Next"},{"title":"Apenas URL's?​","type":1,"pageTitle":"Insecure Direct Object Reference","url":"/docs/seguranca/idor#apenas-urls","content":" Não necessariamente precisa acontecer via URL, pode-se configurar, também, por meio de parâmetros no corpo da requisição:  &lt;form action=&quot;/update_profile&quot; method=&quot;post&quot;&gt; &lt;!-- Other fields for updating name, email, etc. --&gt; &lt;input type=&quot;hidden&quot; name=&quot;user_id&quot; value=&quot;12345&quot; /&gt; &lt;button type=&quot;submit&quot;&gt;Update Profile&lt;/button&gt; &lt;/form&gt;  ","version":"Next","tagName":"h2"},{"title":"Percurso Cognitivo","type":0,"sectionRef":"#","url":"/docs/ux/avaliacao/percurso-cognitivo","content":"Percurso Cognitivo Parte do principio de que o usuário aprende a usar o produto através da exploração e não lendo manuais. Assim, é interessante para descobrir se uma interface é fácil de aprender. Trabalha com histórias de sucesso e histórias de falha. Algumas perguntas sugeridas para identificar sucesso e falha são: sendo honesto, o usuário vai tentar realizar esta ação?os controles para executar esta ação estão visíveis?há um link evidente e forte entre estes controles e a ação?o feedback é fornecido?","keywords":"","version":"Next"},{"title":"Lei de Fitt's","type":0,"sectionRef":"#","url":"/docs/ux/lei-de-fitts","content":"Lei de Fitt's A lei de Fitt's afirma que o tempo necessário para executar uma ação é uma função da distância e tamanho do componente. Quanto maior a distância e menor o tamanho do componente, mais tempo leva para que a ação seja executada.","keywords":"","version":"Next"},{"title":"O que é Usabilidade?","type":0,"sectionRef":"#","url":"/docs/ux/o-que-e-usabilidade","content":"O que é Usabilidade? Segundo a ISO 9241-11, usabilidade é o quanto um produto pode ser utilizado por um determinado usuário para atingir um determinado objetivo com eficiência, eficácia e satisfação em determinado contexto de uso. Assim é preciso: definir um usuário;definir um contexto de uso;definir uma tarefa. Outros pontos que precisam ser definidos: Eficiência Realização da tarefa sem erros Eficácia Realização da tarefa com otimização dos recursos disponíveis. Satisfação O quanto as expectativas são alcançadas.","keywords":"","version":"Next"}],"options":{"id":"default"}}