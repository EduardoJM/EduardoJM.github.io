{"searchDocs":[{"title":"Domain Driven Design","type":0,"sectionRef":"#","url":"/docs/desenvolvimento/arquitetura/ddd/","content":"","keywords":"","version":"Next"},{"title":"Camadas​","type":1,"pageTitle":"Domain Driven Design","url":"/docs/desenvolvimento/arquitetura/ddd/#camadas","content":" ","version":"Next","tagName":"h2"},{"title":"Camada de aplicação​","type":1,"pageTitle":"Domain Driven Design","url":"/docs/desenvolvimento/arquitetura/ddd/#camada-de-aplicação","content":" Responsável pelo projeto principal. Aqui serão implementados os controladores e a exposição de APIs. Tem a função de receber todas as requisições e direcioná-las a algum Service para executar uma determinada ação.  ","version":"Next","tagName":"h3"},{"title":"Camada de Serviço​","type":1,"pageTitle":"Domain Driven Design","url":"/docs/desenvolvimento/arquitetura/ddd/#camada-de-serviço","content":" Nela são implementados fluxos de trabalho e regras globais ao sistema. Essa camada também usa o domínio para persistir informações contra o banco de dados.  ","version":"Next","tagName":"h3"},{"title":"Camada de Infraestrutura​","type":1,"pageTitle":"Domain Driven Design","url":"/docs/desenvolvimento/arquitetura/ddd/#camada-de-infraestrutura","content":" É dividida em duas subcamadas:  Data: realiza a persistência com o banco de dados, utilizando, ou não, algum ORM.Cross-Cutting: uma camada 'separada' que não obedece a hierarquia de camada. Como o próprio nome diz, essa camada cruza toda a a hierarquia. Contém as funcionalidades que pode ser utilizadas em qualquer parte do código, como, por exemplo, validação de CPF/CNPJ, consumo de API externa e utilização de alguma biblioteca de segurança. POssui referências da camada Domain.  ","version":"Next","tagName":"h3"},{"title":"Camada de domínio​","type":1,"pageTitle":"Domain Driven Design","url":"/docs/desenvolvimento/arquitetura/ddd/#camada-de-domínio","content":" Ele é responsável por representar conceitos, informações e situações referentes ao negócios.O estado que reflete a situação de negócios é controlado e usado aqui, embora os detalhes técnicos sobre como armazená-lo sejam delegados à infraestrutura. Essa camada é a essência de negócio do software sendo construído.A camada de modelo de domínio é a implementação do negócio. Quando você implementa uma camada de modelo de domínio de microsserviço em alguma linguagem, essa camada é codificada como uma biblioteca de classes reusável (DLL ou JAR), com as entidades de domínio que modelam os dados e realizam operações sobre ele.Seguindo os princípios de Ignorância de Persistência e a Ignorância da Infraestutura, essa camada deve ignorar totalmente os detalhes tecnológicos. Essas tarefas de persistência devem ser executadas pela camada de infraestrutura.Entidades de domínio não devem ter nenhuma dependência direta (como derivar de uma classe base) da infraestrutura ou acesso a dados, como Entity Framework, Hibrnate ou JPA.Idealmente, suas entidades de domínio não devem derivar nem implementar nenhum tipo definido na infraestrutura.  ","version":"Next","tagName":"h3"},{"title":"Padrões essenciais do DDD​","type":1,"pageTitle":"Domain Driven Design","url":"/docs/desenvolvimento/arquitetura/ddd/#padrões-essenciais-do-ddd","content":" Objeto de ValorEntidadeRaiz agregadaRepositórioCaso de UsoContexto LimitadoFábrica de EntidadesServiço de Domínio ","version":"Next","tagName":"h2"},{"title":"Estilo Arquitetural","type":0,"sectionRef":"#","url":"/docs/desenvolvimento/arquitetura/estilo-arquitetural","content":"Estilo Arquitetural Estilo Arquitetural descreve uma relação, nomeada, de componentes cobrindo uma variedade de características da arquitetura. O nome de um estilo arquitetural, cria um nome único que funciona como uma abreviatura entre arquitetos experientes. Cada nome captura os detalhes daquela arquitetura. Um estilo arquitetural descreve a topologia, as características padrão da arquitetura (benéficas ou prejudiciais). Referência Fundamentas of Software Architecture - Capítulo 9 - Mark Richards e Neal Ford.","keywords":"","version":"Next"},{"title":"QuerySet","type":0,"sectionRef":"#","url":"/docs/desenvolvimento/django/queryset","content":"QuerySet Um QuerySet representa uma coleção de objetos do banco de dados. Em comparação com SQL, um QuerySet equivale a um SELECT. Quando utilizamos o método filter() de um queryset, adicionamos cláusulas limitantes como WHERE ou LIMIT. Ao usar o QuerySet, fazer diversas operações tipo filter() não irá acessar o banco de dados. Por exemplo: users = User.objects.filter(email__icontains='...').filter(is_active=True).filter(...) Mesmo adicionando vários filtros, o QuerySet não será computado e, portanto, não irá consultar o banco de dados. Para computar um QuerySet, é necessário utilizar algum dos métodos: .get(), .first(), etc. conforme QuerySet API reference ou usando algum dos métodos para forçar que o QuerySet seja computado: QuerySet API reference. Conhecer esses aspectos do QuerySet é importante para evitar escrever códigos problemáticos como, por exemplo: ids = [...] queryset = User.objects.filter(is_active=True) for id in ids: user = queryset.get(id=id) O uso do QuerySet como no exemplo acima irá executar uma query no banco de dados para cada ID, enquanto que alterando a lógica para que o método .get() não seja chamado, apenas uma consulta ao banco de dados será realizada: ids = [...] queryset = User.objects.filter(is_active=True, id__in=ids) for user in queryset: print(user) ","keywords":"","version":"Next"},{"title":"Acessibilidade e font-size","type":0,"sectionRef":"#","url":"/docs/desenvolvimento/front-end/accessibility-font-size","content":"","keywords":"","version":"Next"},{"title":"Referências​","type":1,"pageTitle":"Acessibilidade e font-size","url":"/docs/desenvolvimento/front-end/accessibility-font-size#referências","content":" Don’t use rem/em for paddings, margins and more ","version":"Next","tagName":"h2"},{"title":"Django-Rest-Framework e a API de models do Django","type":0,"sectionRef":"#","url":"/docs/desenvolvimento/django/rest-framework-and-django-models","content":"Django-Rest-Framework e a API de models do Django O django-rest-framework possui serializers que se integram muito bem com os models do django, mas é importante ressaltar que o objetivo do rest-framework não é funcionar (e suportar) do mesmo modo a api de models do django e, portanto, algumas funcionalidades &quot;padrão&quot; podem se perder. Um exemplo disso, relatado em Issue #7159 no GitHub é o método clean() dentro do model. from django.core.exceptions import ValidationError from django.db import models from rest_framework import serializers from django import forms from django.test import TestCase class Sample(models.Model): title = models.CharField(max_length=50) def clean(self): raise ValidationError('') class SampleSerializer(serializers.ModelSerializer): class Meta: model = Sample fields = '__all__' class SampleForm(forms.ModelForm): class Meta: model = Sample fields = &quot;__all__&quot; class SampleTests(TestCase): def test_form(self): form = SampleForm({&quot;title&quot;: &quot;test&quot;}) self.assertFalse(form.is_valid()) def test_serializer(self): serializer = SampleSerializer(data={&quot;title&quot;: &quot;test&quot;}) self.assertFalse(serializer.is_valid()) ","keywords":"","version":"Next"},{"title":"findby-instead-waitfor","type":0,"sectionRef":"#","url":"/docs/desenvolvimento/front-end/findby-instead-waitfor","content":"","keywords":"","version":"Next"},{"title":"Componente​","type":1,"pageTitle":"findby-instead-waitfor","url":"/docs/desenvolvimento/front-end/findby-instead-waitfor#componente","content":" export const ListPage = () =&gt; { const [items, setItems] = useState([]); useEffect(() =&gt; { const loadItems = async () =&gt; { setTimeout(() =&gt; setItems([&quot;Item 1&quot;, &quot;Item 2&quot;]), 100); }; loadItems(); }, []); if (!items.length) { return &lt;div&gt;Loading...&lt;/div&gt;; } return ( &lt;div className=&quot;text-list__container&quot;&gt; &lt;h1&gt;List of items&lt;/h1&gt; &lt;ItemList items={items} /&gt; &lt;/div&gt; ); };   ","version":"Next","tagName":"h2"},{"title":"Test with waitFor​","type":1,"pageTitle":"findby-instead-waitfor","url":"/docs/desenvolvimento/front-end/findby-instead-waitfor#test-with-waitfor","content":" import { waitFor } from &quot;@testing-library/react&quot;; //... describe(&quot;ListPage&quot;, () =&gt; { it(&quot;renders without breaking&quot;, async () =&gt; { render(&lt;ListPage /&gt;); await waitFor(() =&gt; { expect( screen.getByRole(&quot;heading&quot;, { name: &quot;List of items&quot; }), ).toBeInTheDocument(); }); }); });   ","version":"Next","tagName":"h2"},{"title":"Test with findBy​","type":1,"pageTitle":"findby-instead-waitfor","url":"/docs/desenvolvimento/front-end/findby-instead-waitfor#test-with-findby","content":" describe(&quot;ListPage&quot;, () =&gt; { it(&quot;renders without breaking&quot;, async () =&gt; { render(&lt;ListPage /&gt;); expect( await screen.findByRole(&quot;heading&quot;, { name: &quot;List of items&quot; }), ).toBeInTheDocument(); }); });   ","version":"Next","tagName":"h2"},{"title":"Referências​","type":1,"pageTitle":"findby-instead-waitfor","url":"/docs/desenvolvimento/front-end/findby-instead-waitfor#referências","content":" Best Practices for Writing Tests with React Testing Library ","version":"Next","tagName":"h2"},{"title":"Formas de Implementação de Micro Front-End's","type":0,"sectionRef":"#","url":"/docs/desenvolvimento/front-end/micro-front-end/implementations-of-micro-front-end","content":"","keywords":"","version":"Next"},{"title":"Implementação em tempo de build​","type":1,"pageTitle":"Formas de Implementação de Micro Front-End's","url":"/docs/desenvolvimento/front-end/micro-front-end/implementations-of-micro-front-end#implementação-em-tempo-de-build","content":" Usar diversos projetos, por exemplo no npm, integrados por um projeto maior. Por exemplo, no package.json:  { &quot;name&quot;: &quot;@my-project/main&quot;, // ... &quot;dependencies&quot;: { &quot;@my-project/frontend-1&quot;: &quot;1.0.0&quot;, &quot;@my-project/frontend-2&quot;: &quot;1.0.0&quot;, &quot;@my-project/frontend-3&quot;: &quot;1.0.0&quot; } }   Um problema disso é que as pipelines de build, test e deploy não são separados e independentes.  ","version":"Next","tagName":"h2"},{"title":"Integração por meio de funções javascript​","type":1,"pageTitle":"Formas de Implementação de Micro Front-End's","url":"/docs/desenvolvimento/front-end/micro-front-end/implementations-of-micro-front-end#integração-por-meio-de-funções-javascript","content":" A ideia, dentro dessa forma de trabalho, é ter vários scripts (bundles) que disponibilizam funções para renderizar aquele micro front-end e, ter um script principal que gerencia chamada para essas funções. Um exemplo disso é:  &lt;script src=&quot;https://browse.example.com/bundle.js&quot;&gt;&lt;/script&gt; &lt;script src=&quot;https://order.example.com/bundle.js&quot;&gt;&lt;/script&gt; &lt;script src=&quot;https://profile.example.com/bundle.js&quot;&gt;&lt;/script&gt; &lt;div id=&quot;micro-frontend-root&quot;&gt;&lt;/div&gt; &lt;script type=&quot;text/javascript&quot;&gt; const microFrontEndsByRoute = { '/': window.renderBrowseRestaurants, '/order-food': window.renderOrderFood, '/user-profile': window.renderUserProfile, }; const renderFunction = microFrontendsByRoute[window.location.pathname]; renderFunction('micro-frontend-root'); &lt;/script&gt;   ","version":"Next","tagName":"h2"},{"title":"Integração através de web components​","type":1,"pageTitle":"Formas de Implementação de Micro Front-End's","url":"/docs/desenvolvimento/front-end/micro-front-end/implementations-of-micro-front-end#integração-através-de-web-components","content":" A estratégia para essa abordagem é definir web components nativos do browser para os micro front-ends:  &lt;!-- /about --&gt; &lt;div id=&quot;container&quot;&gt; &lt;about-micro-frontend&gt;&lt;/about-micro-frontend&gt; &lt;/div&gt;   &lt;!-- /products --&gt; &lt;div id=&quot;container&quot;&gt; &lt;products-micro-frontend&gt;&lt;/products-micro-frontend&gt; &lt;/div&gt;   Ao utilizar web components para criar micro front-ends, é possível utilizar qualquer uma das duas abordagens anteriores para executar os componentes.  ","version":"Next","tagName":"h2"},{"title":"Integração via iframes​","type":1,"pageTitle":"Formas de Implementação de Micro Front-End's","url":"/docs/desenvolvimento/front-end/micro-front-end/implementations-of-micro-front-end#integração-via-iframes","content":" &lt;!-- /about --&gt; &lt;div id=&quot;container&quot;&gt; &lt;iframe src=&quot;https://about.example.com&quot;&gt;&lt;/iframe&gt; &lt;/div&gt;   &lt;!-- /products --&gt; &lt;div id=&quot;container&quot;&gt; &lt;iframe src=&quot;https://products.example.com&quot;&gt;&lt;/iframe&gt; &lt;/div&gt;   ","version":"Next","tagName":"h2"},{"title":"Referências​","type":1,"pageTitle":"Formas de Implementação de Micro Front-End's","url":"/docs/desenvolvimento/front-end/micro-front-end/implementations-of-micro-front-end#referências","content":" Micro Frontends ","version":"Next","tagName":"h2"},{"title":"setup-user-event","type":0,"sectionRef":"#","url":"/docs/desenvolvimento/front-end/setup-user-event","content":"","keywords":"","version":"Next"},{"title":"Referências​","type":1,"pageTitle":"setup-user-event","url":"/docs/desenvolvimento/front-end/setup-user-event#referências","content":" Best Practices for Writing Tests with React Testing Library ","version":"Next","tagName":"h2"},{"title":"Introdução aos Micro Front-End's","type":0,"sectionRef":"#","url":"/docs/desenvolvimento/front-end/micro-front-end/introduction-to-micro-front-end","content":"","keywords":"","version":"Next"},{"title":"Características​","type":1,"pageTitle":"Introdução aos Micro Front-End's","url":"/docs/desenvolvimento/front-end/micro-front-end/introduction-to-micro-front-end#características","content":" A arquitetura de micro front-ends traz uma ideia parecida com microserviços para o front-end, com algumas características:  Maior independência entre os módulos;Arquitetura mais agnóstica a frameworks;Lógica pulverizada em vários projetos;Pipeline de build, test e deploys mais rápida;Assim como a arquitetura de micro serviços, adiciona uma complexidade a mais no projeto.  Os micro front-ends podem ser definidos, em [1], como:  &quot;An architectural style where independently deliverable frontend applications are composed into a greater whole&quot;    ","version":"Next","tagName":"h2"},{"title":"Exemplo Ilustrado​","type":1,"pageTitle":"Introdução aos Micro Front-End's","url":"/docs/desenvolvimento/front-end/micro-front-end/introduction-to-micro-front-end#exemplo-ilustrado","content":" Wireframe\tMicro front-end\t    ","version":"Next","tagName":"h2"},{"title":"Micro front-end's devem ter:​","type":1,"pageTitle":"Introdução aos Micro Front-End's","url":"/docs/desenvolvimento/front-end/micro-front-end/introduction-to-micro-front-end#micro-front-ends-devem-ter","content":" Baixo ou nenhum acoplamento entre os micro front-ends;Alta coesão;Não deve assumir responsabilidades de outro micro front-end;Não deve interferir ou ser interferido por outro micro front-end;Base de código independente;Pipeline de build, test e deploy separados e independentes.Times autônomos.    Pipeline de build, test e deploy separados e independentes    Times autônomos  ","version":"Next","tagName":"h2"},{"title":"Referências​","type":1,"pageTitle":"Introdução aos Micro Front-End's","url":"/docs/desenvolvimento/front-end/micro-front-end/introduction-to-micro-front-end#referências","content":" Micro Frontends ","version":"Next","tagName":"h2"},{"title":"Funções Puras","type":0,"sectionRef":"#","url":"/docs/desenvolvimento/fundamentos/funcoes-puras","content":"","keywords":"","version":"Next"},{"title":"Referência​","type":1,"pageTitle":"Funções Puras","url":"/docs/desenvolvimento/fundamentos/funcoes-puras#referência","content":" Cherry Ramatis - Ending the war or continuing it? Let's bring functional programming to OOP codebases ","version":"Next","tagName":"h2"},{"title":"Don't Repeat Yourself","type":0,"sectionRef":"#","url":"/docs/desenvolvimento/patterns/dry","content":"","keywords":"","version":"Next"},{"title":"Acrônimo​","type":1,"pageTitle":"Don't Repeat Yourself","url":"/docs/desenvolvimento/patterns/dry#acrônimo","content":" No Pragmatic Programmer, é criado o acrônimo D.R.Y: Don't Repeat Yourself, que é:  Todo bloco de conhecimento deve ter uma representação única, sem ambiguidades e dominante num sistema.  ","version":"Next","tagName":"h2"},{"title":"Front-End e Componentização​","type":1,"pageTitle":"Don't Repeat Yourself","url":"/docs/desenvolvimento/patterns/dry#front-end-e-componentização","content":" A prática de componentização e uso de tokens no front-end é uma ótima maneira de evitar repetição de código.  ","version":"Next","tagName":"h2"},{"title":"É uma repetição?​","type":1,"pageTitle":"Don't Repeat Yourself","url":"/docs/desenvolvimento/patterns/dry#é-uma-repetição","content":" Repetir código é ruim, mas uma das formas de entender se um trecho de código é realmente uma duplicação é, de fato, pensar nos motivos para alterar esse trecho de código. Por exemplo: toda vez que um desses trechos for alterado, todos os outros deverão ser alterados também ou existe um mótivo pra alterar apenas um deles? Relacionado com SRP.  ","version":"Next","tagName":"h2"},{"title":"Referência​","type":1,"pageTitle":"Don't Repeat Yourself","url":"/docs/desenvolvimento/patterns/dry#referência","content":" Desbravando SOLID: Práticas avançadas para códigos de qualidade em Java moderno. Alexandre Aquiles. Casa do Código. Alura. ","version":"Next","tagName":"h2"},{"title":"Single Responsibility Principle","type":0,"sectionRef":"#","url":"/docs/desenvolvimento/patterns/solid/srp","content":"","keywords":"","version":"Next"},{"title":"Classes Coesas​","type":1,"pageTitle":"Single Responsibility Principle","url":"/docs/desenvolvimento/patterns/solid/srp#classes-coesas","content":" Classes coesas têm uma característica semelhante: os conceitos que essas classes representam estariam relacionados e separá-los seria pouco natural. O SRP é uma outra maneira de falar sobre a necessidade de código coeso.  ","version":"Next","tagName":"h2"},{"title":"Encontrando classes pouco coesas​","type":1,"pageTitle":"Single Responsibility Principle","url":"/docs/desenvolvimento/patterns/solid/srp#encontrando-classes-pouco-coesas","content":" Para encontrar classes pouco coesas, devemos procurar por classes que:  possuem muitos métodos diferentes;são modificadas com frequência;não param nunca de crescer.    Um dos problemas de coesão mais comuns são Controllers que fazem coisas demais:  buscam dados no BD;implementam regras de negócio;enviam emails;chamam Web Services;enviam resultados para a View (o que realmente deveriam fazer).  ","version":"Next","tagName":"h3"},{"title":"Referência​","type":1,"pageTitle":"Single Responsibility Principle","url":"/docs/desenvolvimento/patterns/solid/srp#referência","content":" Desbravando SOLID: Práticas avançadas para códigos de qualidade em Java moderno. Alexandre Aquiles. Casa do Código. Alura. ","version":"Next","tagName":"h2"},{"title":"Classe","type":0,"sectionRef":"#","url":"/docs/desenvolvimento/fundamentos/classe","content":"","keywords":"","version":"Next"},{"title":"Referência​","type":1,"pageTitle":"Classe","url":"/docs/desenvolvimento/fundamentos/classe#referência","content":" Cherry Ramatis - Ending the war or continuing it? Let's bring functional programming to OOP codebases ","version":"Next","tagName":"h2"},{"title":"Dependency Inversion Principle","type":0,"sectionRef":"#","url":"/docs/desenvolvimento/patterns/solid/dip","content":"","keywords":"","version":"Next"},{"title":"Acoplamento​","type":1,"pageTitle":"Dependency Inversion Principle","url":"/docs/desenvolvimento/patterns/solid/dip#acoplamento","content":" Uma classe com muitas dependências tem acoplamento com muitas outras classes. Além disso, o código acaba acoplado também às dependências das dependências e assim por diante.  Mudanças nas dependências, ou nas dependências das dependências, podem acabar se propagando para a classe que as utiliza. Precisamos ter atenção para evitar que dependências indesejadas se espalhem indevidamente pelo nosso código.  ","version":"Next","tagName":"h2"},{"title":"Acoplamento bom x Acoplamento ruim​","type":1,"pageTitle":"Dependency Inversion Principle","url":"/docs/desenvolvimento/patterns/solid/dip#acoplamento-bom-x-acoplamento-ruim","content":" Acoplamento precisa existir. Uma classe totalmente desacoplada é uma classe inútil.  Exemplo Num código Java desde o primeiro OlaMundo dependemos de String e System. Essas classes do pacote java.lang são estáveis: mudam muito pouco.  Classes estáveis têm essa característica porque milhões de projetos as usam e mudá-las teria um impacto gigantesco. Por isso, podemos depender delas tranquilamente. Esse é um acoplamento bom.  Depender de classes voláteis, por sua vez, é o acoplamento ruim.  ","version":"Next","tagName":"h3"},{"title":"Abstrações e Inversão das Dependências​","type":1,"pageTitle":"Dependency Inversion Principle","url":"/docs/desenvolvimento/patterns/solid/dip#abstrações-e-inversão-das-dependências","content":" Podemos usar classes abstratas e, preferencialmente, interfaces. Abstrações são estáveis: mudam muito menos que implementações.  Podemos também usar classes concretas como abstrações, desde que não deixemos detalhes de outras dependências vazarem.  Ao usarmos classes abstratas ou interfaces, o código não depende mais diretamente da dependência volátil e sim da abstração. E a dependência volátil, por sua vez, também depende da abstração, implementando-a. Por isso, podemos dizer que a dependência é invertida.  Devemos evitar que detalhes das dependências vazem nas nossas abstrações.  ","version":"Next","tagName":"h2"},{"title":"Abstrações conceitualmente abstratas​","type":1,"pageTitle":"Dependency Inversion Principle","url":"/docs/desenvolvimento/patterns/solid/dip#abstrações-conceitualmente-abstratas","content":" Devemos evitar criar abstrações vinculadas a tarefas muito particulares. Por exemplo:  public interface EnviadorSMS { void enviaNota(String mensagemNota, String telefoneClienteNota); }   Boas abstrações devem fornecer capacidades mais amplas, sem estarem atreladas a um uso muito específico.  ","version":"Next","tagName":"h2"},{"title":"Regras de Negócio x Detalhes​","type":1,"pageTitle":"Dependency Inversion Principle","url":"/docs/desenvolvimento/patterns/solid/dip#regras-de-negócio-x-detalhes","content":" ","version":"Next","tagName":"h2"},{"title":"Código de Alto Nível e Baixo Nível​","type":1,"pageTitle":"Dependency Inversion Principle","url":"/docs/desenvolvimento/patterns/solid/dip#código-de-alto-nível-e-baixo-nível","content":" Código de alto nível seriam os códigos que implementam regras de negócio.Código de baixo nível seriam os mecanismos de entrega, os detalhes de implementação mais técnicos.  Código de alto nível é aquele mais distante das entradas ou saídas do sistema e, por isso, muda menos frequentemente e por razões mais importantes, relacionadas ao negócio.  Já o código de baixo nível, mais próximo das entradas ou saídas, muda mais frequentemente e com mais urgência.  Alto ou baixo nível depende do contexto Para uma aplicação Web, o código SQL pode ser considerado um código de baixo nível, um detalhe de implementação, já que não está diretamente ligado às regras de negócio, mas à representação das entidades em um banco de dados relacional. Porém, para quem desenvolve um ORM, gerar código SQL comum entre os bancos de dados pode ser considerado alto nível, já que está relacionado ao problema que uma biblioteca de ORM resolve. Variações entre os bancos de dados, como AUTO_INCREMENT, SEQUENCE ou IDENTITY na geração de PK's, seriam detalhes de implementação de baixo nível.  ","version":"Next","tagName":"h3"},{"title":"O princípio da inversão de dependências​","type":1,"pageTitle":"Dependency Inversion Principle","url":"/docs/desenvolvimento/patterns/solid/dip#o-princípio-da-inversão-de-dependências","content":" Módulos de alto nível não devem depender de módulos de baixo nível. Ambos devem depender de abstrações. Abstrações não devem depender de detalhes. Detalhes devem depender de abstrações.  Exemplo Pense em uma arquitetura em três camadas: o código da camada de Apresentação depende do código da camada de Negócio que, por sua vez, depende do código da camada de Persistência. Essa arquitetura não atende ao DIP: código de alto nível (Negócio) depende de código de baixo nível (Persistência). Para atender ao DIP, teríamos que inserir abstrações na camada de Negócio para inverter as dependências, fazendo com que Persistência dependa de Negócio e não o contrário.  TODO: continuar aqui ","version":"Next","tagName":"h2"},{"title":"testing-forms-with-accessibility","type":0,"sectionRef":"#","url":"/docs/desenvolvimento/front-end/testing-forms-with-accessibility","content":"","keywords":"","version":"Next"},{"title":"Input's​","type":1,"pageTitle":"testing-forms-with-accessibility","url":"/docs/desenvolvimento/front-end/testing-forms-with-accessibility#inputs","content":" ","version":"Next","tagName":"h2"},{"title":"Componente​","type":1,"pageTitle":"testing-forms-with-accessibility","url":"/docs/desenvolvimento/front-end/testing-forms-with-accessibility#componente","content":" &lt;label htmlFor=&quot;name&quot;&gt;Name&lt;/label&gt; &lt;input id=&quot;name&quot; onChange={onFieldChange} placeholder=&quot;Enter your name&quot; /&gt;   ","version":"Next","tagName":"h3"},{"title":"Querying​","type":1,"pageTitle":"testing-forms-with-accessibility","url":"/docs/desenvolvimento/front-end/testing-forms-with-accessibility#querying","content":" user.type(screen.getByRole(&quot;textbox&quot;, { name: &quot;Name&quot; }), &quot;Test&quot;);   The { name: &quot;Name&quot; } query for acessible name and not for the input name property.  ","version":"Next","tagName":"h3"},{"title":"Submit Button​","type":1,"pageTitle":"testing-forms-with-accessibility","url":"/docs/desenvolvimento/front-end/testing-forms-with-accessibility#submit-button","content":" Use the *ByRole methods:  ","version":"Next","tagName":"h2"},{"title":"Componente​","type":1,"pageTitle":"testing-forms-with-accessibility","url":"/docs/desenvolvimento/front-end/testing-forms-with-accessibility#componente-1","content":" &lt;button type=&quot;submit&quot;&gt;Sign up&lt;/button&gt;   ","version":"Next","tagName":"h3"},{"title":"Querying​","type":1,"pageTitle":"testing-forms-with-accessibility","url":"/docs/desenvolvimento/front-end/testing-forms-with-accessibility#querying-1","content":" screen.getByRole(&quot;button&quot;, { name: &quot;Sign up&quot; });   The accessible name this time is the actual text content of the button. Note that if we add an aria-label to the button, the accessible name will be the text content of that aria-label.  ","version":"Next","tagName":"h3"},{"title":"Referências​","type":1,"pageTitle":"testing-forms-with-accessibility","url":"/docs/desenvolvimento/front-end/testing-forms-with-accessibility#referências","content":" Best Practices for Writing Tests with React Testing Library ","version":"Next","tagName":"h2"},{"title":"Insecure Direct Object Reference","type":0,"sectionRef":"#","url":"/docs/desenvolvimento/seguranca/idor","content":"","keywords":"","version":"Next"},{"title":"Apenas URL's?​","type":1,"pageTitle":"Insecure Direct Object Reference","url":"/docs/desenvolvimento/seguranca/idor#apenas-urls","content":" Não necessariamente precisa acontecer via URL, pode-se configurar, também, por meio de parâmetros no corpo da requisição:  &lt;form action=&quot;/update_profile&quot; method=&quot;post&quot;&gt; &lt;!-- Other fields for updating name, email, etc. --&gt; &lt;input type=&quot;hidden&quot; name=&quot;user_id&quot; value=&quot;12345&quot; /&gt; &lt;button type=&quot;submit&quot;&gt;Update Profile&lt;/button&gt; &lt;/form&gt;  ","version":"Next","tagName":"h2"},{"title":"Sobre","type":0,"sectionRef":"#","url":"/docs/intro","content":"Sobre TODO: escrever aqui Introdução Esse é uma seção de anotações sobre diversos temas de estudo na área de tecnologia, ciências e matemática.","keywords":"","version":"Next"},{"title":"UTM","type":0,"sectionRef":"#","url":"/docs/marketing/utm","content":"","keywords":"","version":"Next"},{"title":"Tipos de Tags UTM​","type":1,"pageTitle":"UTM","url":"/docs/marketing/utm#tipos-de-tags-utm","content":" utm_source: a origem do tráfego, ou seja, de qual site, anunciante ou publicação veio o usuário.utm_medium: a mídia de publicidade ou marketing usada para chegar ao seu site (exemplos: banner, cpc, newsletter).utm_campaign: o nome da campanha que define determinado contexto de marketing (exemplos: natal, lancamento, promo01). ","version":"Next","tagName":"h2"},{"title":"Estatística Descritiva vs Inferência Estatística","type":0,"sectionRef":"#","url":"/docs/matematica/estatistica/inferencia-vs-descritiva","content":"Estatística Descritiva vs Inferência Estatística Estatística Descritiva Trata da organização, resumo e análise dos dados. Estatística Inferencial Estatística Inferencial ou Inferência Estatística trabalha obtendo conclusões sobre a população a partir da amostra.","keywords":"","version":"Next"},{"title":"Correlação Linear","type":0,"sectionRef":"#","url":"/docs/matematica/estatistica/regressão-linear/correlacao-linear","content":"","keywords":"","version":"Next"},{"title":"Coeficiente de Correlação​","type":1,"pageTitle":"Correlação Linear","url":"/docs/matematica/estatistica/regressão-linear/correlacao-linear#coeficiente-de-correlação","content":" Corr(x,y)=∑xi⋅yi−nxˉyˉ[∑xi2−nxˉ2]⋅[∑yi2−nyˉ2]\\text{Corr}(x, y) = \\dfrac{ \\displaystyle\\sum x_i \\cdot y_i - n\\bar{x}\\bar{y} }{ \\sqrt{ \\bigg[ \\displaystyle\\sum x_i^2 - n\\bar{x}^2 \\bigg ] \\cdot \\bigg[ \\displaystyle\\sum y_i^2 - n\\bar{y}^2 \\bigg ] } }Corr(x,y)=[∑xi2​−nxˉ2]⋅[∑yi2​−nyˉ​2]​∑xi​⋅yi​−nxˉyˉ​​ ","version":"Next","tagName":"h2"},{"title":"Análise de Variância (ANOVA)","type":0,"sectionRef":"#","url":"/docs/matematica/estatistica/regressão-linear/anova","content":"","keywords":"","version":"Next"},{"title":"Tabela ANOVA​","type":1,"pageTitle":"Análise de Variância (ANOVA)","url":"/docs/matematica/estatistica/regressão-linear/anova#tabela-anova","content":" Variação\tSoma de Quadrado\tGraus de Liberdade\tErro Médio\tFRegressão\tSSRSS_RSSR​\t1\tMSR=SSRMS_R=SS_RMSR​=SSR​\tMSR/MSEMS_R/MS_EMSR​/MSE​ Residual\tSSESS_ESSE​\tn−2n-2n−2\tMSE=SSE/(n−1)MS_E=SS_E/(n-1)MSE​=SSE​/(n−1) Total\tSSTSS_TSST​\tn−1n-1n−1   ","version":"Next","tagName":"h2"},{"title":"Coeficiente de Determinação​","type":1,"pageTitle":"Análise de Variância (ANOVA)","url":"/docs/matematica/estatistica/regressão-linear/anova#coeficiente-de-determinação","content":" O coeficiente de determinação (ou lucro relativo) que se ganha ao introduzir o modelo, é dado por R2=SSRSSTR^2 = \\dfrac{SS_R}{SS_T}R2=SST​SSR​​ ","version":"Next","tagName":"h2"},{"title":"Eficiência","type":0,"sectionRef":"#","url":"/docs/ux/avaliacao/eficiencia","content":"Eficiência Algumas avaliações que são relacionadas a eficiência são: medições de tempo (tempo de realização da tarefa, tempo até o erro, etc);taxa de entrada de dados;quantidade de informações acessadas;frequência de uso;desvios da solução ótima.","keywords":"","version":"Next"},{"title":"Heurísticas","type":0,"sectionRef":"#","url":"/docs/ux/avaliacao/heuristicas","content":"Heurísticas O fluxo para uma avaliação com o uso de heurísticas é: Se familiarize com a lista de heurísticas.Se familiarize com a interface que vai ser avaliada.Crie uma lista de tarefas.Execute cada uma das tarefas.Avalie a interface de acordo com a lista de heurísticas.Classifique o problema de acordo com a severidade.Faça um relatório.","keywords":"","version":"Next"},{"title":"Percurso Cognitivo","type":0,"sectionRef":"#","url":"/docs/ux/avaliacao/percurso-cognitivo","content":"Percurso Cognitivo Parte do principio de que o usuário aprende a usar o produto através da exploração e não lendo manuais. Assim, é interessante para descobrir se uma interface é fácil de aprender. Trabalha com histórias de sucesso e histórias de falha. Algumas perguntas sugeridas para identificar sucesso e falha são: sendo honesto, o usuário vai tentar realizar esta ação?os controles para executar esta ação estão visíveis?há um link evidente e forte entre estes controles e a ação?o feedback é fornecido?","keywords":"","version":"Next"},{"title":"Lei de Fitt's","type":0,"sectionRef":"#","url":"/docs/ux/lei-de-fitts","content":"Lei de Fitt's A lei de Fitt's afirma que o tempo necessário para executar uma ação é uma função da distância e tamanho do componente. Quanto maior a distância e menor o tamanho do componente, mais tempo leva para que a ação seja executada.","keywords":"","version":"Next"},{"title":"Regressão Linear Simples","type":0,"sectionRef":"#","url":"/docs/matematica/estatistica/regressão-linear/regressao-linear-simples","content":"","keywords":"","version":"Next"},{"title":"Visual​","type":1,"pageTitle":"Regressão Linear Simples","url":"/docs/matematica/estatistica/regressão-linear/regressao-linear-simples#visual","content":"   ","version":"Next","tagName":"h2"},{"title":"Fórmula​","type":1,"pageTitle":"Regressão Linear Simples","url":"/docs/matematica/estatistica/regressão-linear/regressao-linear-simples#fórmula","content":" y=β0+β1xy = \\beta_0 + \\beta_1 x y=β0​+β1​x  O objetivo é calcular β0\\beta_0β0​ e β1\\beta_1β1​.  Coeficientes β0\\beta_0β0​ é chamado de intercepto (coeficiente linear da reta). β1\\beta_1β1​ é chamado de inclinação (coeficiente angular da reta).reta.  Variáveis A variável yyy é chamada de variável dependente, ou resposta.A variável xxx é chamda de variável independente ou explicativa.  ","version":"Next","tagName":"h2"},{"title":"Determinação dos Parâmetros​","type":1,"pageTitle":"Regressão Linear Simples","url":"/docs/matematica/estatistica/regressão-linear/regressao-linear-simples#determinação-dos-parâmetros","content":" ","version":"Next","tagName":"h2"},{"title":"Inclinação​","type":1,"pageTitle":"Regressão Linear Simples","url":"/docs/matematica/estatistica/regressão-linear/regressao-linear-simples#inclinação","content":" β1=∑xiyi−(∑xi)⋅(∑yi)n∑xi2−(∑xi)2n\\beta_1 = \\dfrac{ \\displaystyle\\sum x_i y_i - \\dfrac{ \\big( \\displaystyle\\sum x_i \\big) \\cdot \\big( \\displaystyle\\sum y_i \\big) }{n} }{ \\displaystyle\\sum x_i^2 - \\dfrac{ \\big( \\sum x_i \\big)^2 }{n} }β1​=∑xi2​−n(∑xi​)2​∑xi​yi​−n(∑xi​)⋅(∑yi​)​​  ","version":"Next","tagName":"h3"},{"title":"Intercepto​","type":1,"pageTitle":"Regressão Linear Simples","url":"/docs/matematica/estatistica/regressão-linear/regressao-linear-simples#intercepto","content":" β0=yˉ−β1xˉ\\beta_0 = \\bar{y} - \\beta_1\\bar{x}β0​=yˉ​−β1​xˉ ","version":"Next","tagName":"h3"},{"title":"O que é Usabilidade?","type":0,"sectionRef":"#","url":"/docs/ux/o-que-e-usabilidade","content":"O que é Usabilidade? Segundo a ISO 9241-11, usabilidade é o quanto um produto pode ser utilizado por um determinado usuário para atingir um determinado objetivo com eficiência, eficácia e satisfação em determinado contexto de uso. Assim é preciso: definir um usuário;definir um contexto de uso;definir uma tarefa. Outros pontos que precisam ser definidos: Eficiência Realização da tarefa sem erros Eficácia Realização da tarefa com otimização dos recursos disponíveis. Satisfação O quanto as expectativas são alcançadas.","keywords":"","version":"Next"},{"title":"Regressão Linear Múltipla","type":0,"sectionRef":"#","url":"/docs/matematica/estatistica/regressão-linear/regressao-linear-multipla","content":"","keywords":"","version":"Next"},{"title":"Variáveis​","type":1,"pageTitle":"Regressão Linear Múltipla","url":"/docs/matematica/estatistica/regressão-linear/regressao-linear-multipla#variáveis","content":" yyy é a variável resposta.x1x_1x1​, x2x_2x2​, x3x_3x3​, …\\dots…, xkx_kxk​ são variáveis explicativas.  ","version":"Next","tagName":"h2"},{"title":"Forma Matricial​","type":1,"pageTitle":"Regressão Linear Múltipla","url":"/docs/matematica/estatistica/regressão-linear/regressao-linear-multipla#forma-matricial","content":" Y=[y1y2⋮yn]Y = \\begin{bmatrix} y_1 \\\\ y_2 \\\\ \\vdots\\\\ y_n \\end{bmatrix}Y=​y1​y2​⋮yn​​​  X=[1x11x12⋯x1k1x11x12⋯x1k⋮⋮⋮⋱⋮1xn1xn2⋯xnk]X = \\begin{bmatrix} 1 &amp; x_{11} &amp; x_{12} &amp; \\cdots &amp; x_{1k} \\\\ 1 &amp; x_{11} &amp; x_{12} &amp; \\cdots &amp; x_{1k} \\\\ \\vdots &amp; \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\ 1 &amp; x_{n1} &amp; x_{n2} &amp; \\cdots &amp; x_{nk} \\end{bmatrix}X=​11⋮1​x11​x11​⋮xn1​​x12​x12​⋮xn2​​⋯⋯⋱⋯​x1k​x1k​⋮xnk​​​  β=[β0β1⋮βk]\\beta = \\begin{bmatrix} \\beta_0 \\\\ \\beta_1 \\\\ \\vdots \\\\ \\beta_k \\end{bmatrix}β=​β0​β1​⋮βk​​​  Y=XβY=X\\betaY=Xβ  ","version":"Next","tagName":"h2"},{"title":"Solução​","type":1,"pageTitle":"Regressão Linear Múltipla","url":"/docs/matematica/estatistica/regressão-linear/regressao-linear-multipla#solução","content":" β^=(XTX)−1XTy\\hat{\\beta} = (X^TX)^{-1}X^Tyβ^​=(XTX)−1XTy  y^=Xβ^\\hat{y} = X\\hat{\\beta}y^​=Xβ^​ ","version":"Next","tagName":"h2"}],"options":{"id":"default"}}