"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[8250],{3397:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>c,default:()=>u,frontMatter:()=>s,metadata:()=>r,toc:()=>l});var a=t(4848),o=t(8453);const s={tags:["React","Lazy-Loading"]},c="Chunk Names",r={id:"desenvolvimento/front-end/react/chunk-name",title:"Chunk Names",description:"Usando lazy-loading \xe9 poss\xedvel definir o nome dos chunks:",source:"@site/docs/desenvolvimento/front-end/react/chunk-name.md",sourceDirName:"desenvolvimento/front-end/react",slug:"/desenvolvimento/front-end/react/chunk-name",permalink:"/docs/desenvolvimento/front-end/react/chunk-name",draft:!1,unlisted:!1,editUrl:"https://github.com/EduardoJM/EduardoJM.github.io/tree/main/docs/desenvolvimento/front-end/react/chunk-name.md",tags:[{inline:!0,label:"React",permalink:"/docs/tags/react"},{inline:!0,label:"Lazy-Loading",permalink:"/docs/tags/lazy-loading"}],version:"current",lastUpdatedBy:"dependabot[bot]",lastUpdatedAt:1732145572e3,frontMatter:{tags:["React","Lazy-Loading"]},sidebar:"tutorialSidebar",previous:{title:"React",permalink:"/docs/category/react"},next:{title:"Testes com React",permalink:"/docs/category/testes-com-react"}},i={},l=[{value:"Refer\xeancias",id:"refer\xeancias",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"chunk-names",children:"Chunk Names"}),"\n",(0,a.jsx)(n.p,{children:"Usando lazy-loading \xe9 poss\xedvel definir o nome dos chunks:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"React.lazy(() => import(/* webpackChunkName: lazy-component */ './component'));\n"})}),"\n",(0,a.jsx)(n.p,{children:"E usar uma fun\xe7\xe3o para que o lazy utilize o nome do caminho no chunk:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"const lazyImport = (path) => {\n  return import(/* webpackChunkName: \"[request]\" */ `${path}`);\n};\n\nconst Home = React.lazy(() => lazyImport('../../pages/Home'));\n// Chunk name will be pages-Home.chunk.js\n"})}),"\n",(0,a.jsx)(n.h2,{id:"refer\xeancias",children:"Refer\xeancias"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://bsky.app/profile/lixeletto.bsky.social/post/3l5m4z6nvvn2h",children:"Cu & C\xf3digo - Bluesky"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://stackoverflow.com/questions/63808927/reactjs-create-chunks-automatically-with-lazy-loading",children:"Stackoverflow"})}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>r});var a=t(6540);const o={},s=a.createContext(o);function c(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);