"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[3880],{3474:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>f,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var i=n(5893),s=n(1151);const r={},a=void 0,o={id:"front-end/findby-instead-waitfor",title:"findby-instead-waitfor",description:"Componente",source:"@site/docs/front-end/findby-instead-waitfor.md",sourceDirName:"front-end",slug:"/front-end/findby-instead-waitfor",permalink:"/docs/front-end/findby-instead-waitfor",draft:!1,unlisted:!1,editUrl:"https://github.com/EduardoJM/EduardoJM.github.io/tree/main/docs/front-end/findby-instead-waitfor.md",tags:[],version:"current",lastUpdatedBy:"Eduardo Oliveira",lastUpdatedAt:1712852616,formattedLastUpdatedAt:"11 de abr. de 2024",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Acessibilidade e font-size",permalink:"/docs/front-end/accessibility-font-size"},next:{title:"setup-user-event",permalink:"/docs/front-end/setup-user-event"}},d={},c=[{value:"Componente",id:"componente",level:2},{value:"Test with waitFor",id:"test-with-waitfor",level:2},{value:"Test with findBy",id:"test-with-findby",level:2},{value:"Refer\xeancias",id:"refer\xeancias",level:2}];function l(e){const t={a:"a",code:"code",h2:"h2",li:"li",pre:"pre",ul:"ul",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h2,{id:"componente",children:"Componente"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-jsx",children:'export const ListPage = () => {\n  const [items, setItems] = useState([]);\n \n  useEffect(() => {\n    const loadItems = async () => {\n      setTimeout(() => setItems(["Item 1", "Item 2"]), 100);\n    };\n    loadItems();\n  }, []);\n \n  if (!items.length) {\n    return <div>Loading...</div>;\n  }\n \n  return (\n    <div className="text-list__container">\n      <h1>List of items</h1>\n      <ItemList items={items} />\n    </div>\n  );\n};\n'})}),"\n",(0,i.jsx)(t.h2,{id:"test-with-waitfor",children:"Test with waitFor"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-jsx",children:'import { waitFor } from "@testing-library/react";\n \n//...\n \ndescribe("ListPage", () => {\n  it("renders without breaking", async () => {\n    render(<ListPage />);\n \n    await waitFor(() => {\n      expect(\n        screen.getByRole("heading", { name: "List of items" }),\n      ).toBeInTheDocument();\n    });\n  });\n});\n\n'})}),"\n",(0,i.jsx)(t.h2,{id:"test-with-findby",children:"Test with findBy"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-jsx",children:'describe("ListPage", () => {\n  it("renders without breaking", async () => {\n    render(<ListPage />);\n    expect(\n      await screen.findByRole("heading", { name: "List of items" }),\n    ).toBeInTheDocument();\n  });\n});\n'})}),"\n",(0,i.jsx)(t.h2,{id:"refer\xeancias",children:"Refer\xeancias"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://claritydev.net/blog/improving-react-testing-library-tests",children:"Best Practices for Writing Tests with React Testing Library"})}),"\n"]})]})}function f(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>o,a:()=>a});var i=n(7294);const s={},r=i.createContext(s);function a(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);