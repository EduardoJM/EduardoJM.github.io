"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[543],{3905:(e,o,a)=>{a.d(o,{Zo:()=>d,kt:()=>p});var t=a(7294);function s(e,o,a){return o in e?Object.defineProperty(e,o,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[o]=a,e}function r(e,o){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);o&&(t=t.filter((function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable}))),a.push.apply(a,t)}return a}function n(e){for(var o=1;o<arguments.length;o++){var a=null!=arguments[o]?arguments[o]:{};o%2?r(Object(a),!0).forEach((function(o){s(e,o,a[o])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(o){Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(a,o))}))}return e}function i(e,o){if(null==e)return{};var a,t,s=function(e,o){if(null==e)return{};var a,t,s={},r=Object.keys(e);for(t=0;t<r.length;t++)a=r[t],o.indexOf(a)>=0||(s[a]=e[a]);return s}(e,o);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)a=r[t],o.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(s[a]=e[a])}return s}var u=t.createContext({}),m=function(e){var o=t.useContext(u),a=o;return e&&(a="function"==typeof e?e(o):n(n({},o),e)),a},d=function(e){var o=m(e.components);return t.createElement(u.Provider,{value:o},e.children)},c={inlineCode:"code",wrapper:function(e){var o=e.children;return t.createElement(t.Fragment,{},o)}},l=t.forwardRef((function(e,o){var a=e.components,s=e.mdxType,r=e.originalType,u=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),l=m(a),p=s,f=l["".concat(u,".").concat(p)]||l[p]||c[p]||r;return a?t.createElement(f,n(n({ref:o},d),{},{components:a})):t.createElement(f,n({ref:o},d))}));function p(e,o){var a=arguments,s=o&&o.mdxType;if("string"==typeof e||s){var r=a.length,n=new Array(r);n[0]=l;var i={};for(var u in o)hasOwnProperty.call(o,u)&&(i[u]=o[u]);i.originalType=e,i.mdxType="string"==typeof e?e:s,n[1]=i;for(var m=2;m<r;m++)n[m]=a[m];return t.createElement.apply(null,n)}return t.createElement.apply(null,a)}l.displayName="MDXCreateElement"},1670:(e,o,a)=>{a.r(o),a.d(o,{assets:()=>u,contentTitle:()=>n,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>m});var t=a(7462),s=(a(7294),a(3905));const r={},n="Dubl\xeas de Testes",i={unversionedId:"theory/tests/test-doubles",id:"theory/tests/test-doubles",title:"Dubl\xeas de Testes",description:'"Test Doubles\u201d \xe9 um termo gen\xe9rico para qualquer caso que voc\xea queira substituir um objeto de produ\xe7\xe3o para fins de teste. Pense em "dubl\xea", aqueles de cinema mesmo, que "simulam\u201d a apar\xeancia e o comportamento dos atores em um filme. Voc\xea provavelmente deve conhecer o conceito de maneira generalizada como "mockar" ou pela palavra "Mock". O fato \xe9 que Mock \xe9 apenas um dos tipos de "dubl\xeas" que temos dispon\xedveis.',source:"@site/shorts/theory/tests/test-doubles.md",sourceDirName:"theory/tests",slug:"/theory/tests/test-doubles",permalink:"/shorts/theory/tests/test-doubles",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Testes",permalink:"/shorts/category/testes"}},u={},m=[{value:"Tipos",id:"tipos",level:2},{value:"Diferen\xe7as entre mocks e stubs",id:"diferen\xe7as-entre-mocks-e-stubs",level:2},{value:"Refer\xeancia",id:"refer\xeancia",level:2}],d={toc:m};function c(e){let{components:o,...a}=e;return(0,s.kt)("wrapper",(0,t.Z)({},d,a,{components:o,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"dubl\xeas-de-testes"},"Dubl\xeas de Testes"),(0,s.kt)("p",null,'"Test Doubles\u201d \xe9 um termo gen\xe9rico para qualquer caso que voc\xea queira substituir um objeto de produ\xe7\xe3o para fins de teste. Pense em "dubl\xea", aqueles de cinema mesmo, que "simulam\u201d a apar\xeancia e o comportamento dos atores em um filme. Voc\xea provavelmente deve conhecer o conceito de maneira generalizada como "mockar" ou pela palavra "Mock". O fato \xe9 que Mock \xe9 apenas um dos tipos de "dubl\xeas" que temos dispon\xedveis.'),(0,s.kt)("h2",{id:"tipos"},"Tipos"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"Dummies:")," s\xe3o objetos ou dados fict\xedcios que substituem dados reais mas que n\xe3o utilizados nos testes geralmente. S\xe3o usados para satisfazer par\xe2metros. Com o uso deles \xe9 poss\xedvel diminuir a complexidade dos testes, focando no que importa."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"Fakes:")," s\xe3o objetos reais que implementam um comportamento que os torna invi\xe1vel para serem utilizados em produ\xe7\xe3o (um In-Memory Database, por exemplo)."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"Spies:"),' s\xe3o "espi\xf5es\u201d para registrar as informa\xe7\xf5es de uma determinada fun\xe7\xe3o. Pode ser usado para dizer se um espec\xedfico m\xe9todo importante no escopo da fun\xe7\xe3o que est\xe1 sendo testada foi chamado, quantas vezes, com quais argumentos e etc.'),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"Stubs:")," s\xe3o semelhantes aos spies por\xe9m, ele consegue substituir toda a implementa\xe7\xe3o de um espec\xedfico m\xe9todo, mudando o seu comportamento. S\xe3o \xfateis para simular uma poss\xedvel exce\xe7\xe3o, evitar estresse na camada de servi\xe7o: persist\xeancia de dados (evitando de gravar um registro no banco de dados, por exemplo); chamada \xe0 uma API ou integra\xe7\xe3o a outros servi\xe7os possibilitando a diminui\xe7\xe3o no tempo de execu\xe7\xe3o do teste."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"Mocks:")," S\xe3o similares ao stub por\xe9m, \xe9 a camada mais alta para tornar um comportamento falso, geralmente, s\xe3o usados para emular um banco de dados, um output de dados ou at\xe9 mesmo uma depend\xeancia, a diferen\xe7a \xe9 que, com um stub, \xe9 poss\xedvel testar diversas ramifica\xe7\xf5es do seu c\xf3digo, j\xe1 com o mock, \xe9 poss\xedvel testar diversos comportamentos de uma s\xf3 vez. Os Mocks tem expectativas sobre o jeito que ele deve ser chamado e, caso n\xe3o seja chamado da forma correta, o teste deve falhar.")),(0,s.kt)("h2",{id:"diferen\xe7as-entre-mocks-e-stubs"},"Diferen\xe7as entre mocks e stubs"),(0,s.kt)("p",null,"Para entender a diferen\xe7a entre mocks e stubs vamos imaginar que toda vez que um usu\xe1rio criar uma conta no nosso software, um e-mail \xe9 disparado com uma mensagem de boas-vindas e dados referente \xe0 sua conta. No nosso cen\xe1rio de testes n\xe3o queremos enviar esse e-mail. Podemos usar mocks ou stubs, mas afinal... qual \xe9 a diferen\xe7a?"),(0,s.kt)("p",null,"Lembra que falamos que os mocks tem expectativas sobre o jeito que ele deve ser chamado? Aqui criamos as expectativas (espera-se que o m\xe9todo mailer.send deve ser chamado ao menos 1 vez e o m\xe9todo warehouse.hasInventory seja chamado ao menos uma vez, com qualquer argumento e retornar\xe1 false quando chamado. Se por ventura alguma dessas expectativas n\xe3o forem atendidas, nosso teste falhar\xe1."),(0,s.kt)("p",null,"Em ambos os casos usamos Test Doubles ao inv\xe9s do nosso servi\xe7o de e-mail (evitando o estresse externo). A principal diferen\xe7a \xe9 que com stub utilizamos a verifica\xe7\xe3o por estado e com o mock usamos a verifica\xe7\xe3o do comportamento."),(0,s.kt)("h2",{id:"refer\xeancia"},"Refer\xeancia"),(0,s.kt)("p",null,"William Queiroz. ",(0,s.kt)("a",{parentName:"p",href:"https://dev.to/wnqueiroz/testes-unitarios-fundamentos-e-qualidade-de-software-5af0"},"Testes Unit\xe1rios: Fundamentos e Qualidade de Software!")))}c.isMDXComponent=!0}}]);