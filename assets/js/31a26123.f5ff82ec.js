"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[447],{3905:(e,r,o)=>{o.d(r,{Zo:()=>m,kt:()=>f});var t=o(7294);function a(e,r,o){return r in e?Object.defineProperty(e,r,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[r]=o,e}function n(e,r){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),o.push.apply(o,t)}return o}function s(e){for(var r=1;r<arguments.length;r++){var o=null!=arguments[r]?arguments[r]:{};r%2?n(Object(o),!0).forEach((function(r){a(e,r,o[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):n(Object(o)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(o,r))}))}return e}function d(e,r){if(null==e)return{};var o,t,a=function(e,r){if(null==e)return{};var o,t,a={},n=Object.keys(e);for(t=0;t<n.length;t++)o=n[t],r.indexOf(o)>=0||(a[o]=e[o]);return a}(e,r);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(t=0;t<n.length;t++)o=n[t],r.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(a[o]=e[o])}return a}var l=t.createContext({}),i=function(e){var r=t.useContext(l),o=r;return e&&(o="function"==typeof e?e(r):s(s({},r),e)),o},m=function(e){var r=i(e.components);return t.createElement(l.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},c=t.forwardRef((function(e,r){var o=e.components,a=e.mdxType,n=e.originalType,l=e.parentName,m=d(e,["components","mdxType","originalType","parentName"]),c=i(o),f=a,u=c["".concat(l,".").concat(f)]||c[f]||p[f]||n;return o?t.createElement(u,s(s({ref:r},m),{},{components:o})):t.createElement(u,s({ref:r},m))}));function f(e,r){var o=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var n=o.length,s=new Array(n);s[0]=c;var d={};for(var l in r)hasOwnProperty.call(r,l)&&(d[l]=r[l]);d.originalType=e,d.mdxType="string"==typeof e?e:a,s[1]=d;for(var i=2;i<n;i++)s[i]=o[i];return t.createElement.apply(null,s)}return t.createElement.apply(null,o)}c.displayName="MDXCreateElement"},552:(e,r,o)=>{o.r(r),o.d(r,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>n,metadata:()=>d,toc:()=>i});var t=o(7462),a=(o(7294),o(3905));const n={},s="Django-Rest-Framework e a API de models do Django",d={unversionedId:"django/rest-framework-and-django-models",id:"django/rest-framework-and-django-models",title:"Django-Rest-Framework e a API de models do Django",description:'O django-rest-framework possui serializers que se integram muito bem com os models do django, mas \xe9 importante ressaltar que o objetivo do rest-framework n\xe3o \xe9 funcionar (e suportar) do mesmo modo a api de models do django e, portanto, algumas funcionalidades "padr\xe3o" podem se perder. Um exemplo disso, relatado em Issue #7159 no GitHub \xe9 o m\xe9todo clean() dentro do model.',source:"@site/docs/django/rest-framework-and-django-models.md",sourceDirName:"django",slug:"/django/rest-framework-and-django-models",permalink:"/docs/django/rest-framework-and-django-models",draft:!1,editUrl:"https://github.com/EduardoJM/EduardoJM.github.io/tree/main/docs/django/rest-framework-and-django-models.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Django",permalink:"/docs/category/django"},next:{title:"Teoria",permalink:"/docs/category/teoria"}},l={},i=[],m={toc:i};function p(e){let{components:r,...o}=e;return(0,a.kt)("wrapper",(0,t.Z)({},m,o,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"django-rest-framework-e-a-api-de-models-do-django"},"Django-Rest-Framework e a API de models do Django"),(0,a.kt)("p",null,'O django-rest-framework possui serializers que se integram muito bem com os models do django, mas \xe9 importante ressaltar que o objetivo do rest-framework n\xe3o \xe9 funcionar (e suportar) do mesmo modo a api de models do django e, portanto, algumas funcionalidades "padr\xe3o" podem se perder. Um exemplo disso, relatado em ',(0,a.kt)("a",{parentName:"p",href:"https://github.com/encode/django-rest-framework/issues/7159"},"Issue #7159 no GitHub")," \xe9 o m\xe9todo ",(0,a.kt)("inlineCode",{parentName:"p"},"clean()")," dentro do model."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'from django.core.exceptions import ValidationError\nfrom django.db import models\nfrom rest_framework import serializers\nfrom django import forms\nfrom django.test import TestCase\n\nclass Sample(models.Model):\n    title = models.CharField(max_length=50)\n\n    def clean(self):\n        raise ValidationError(\'\')\n\nclass SampleSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Sample\n        fields = \'__all__\'\n\nclass SampleForm(forms.ModelForm):\n    class Meta:\n        model = Sample\n        fields = "__all__"\n\nclass SampleTests(TestCase):\n    def test_form(self):\n        form = SampleForm({"title": "test"})\n        self.assertFalse(form.is_valid())\n\n    def test_serializer(self):\n        serializer = SampleSerializer(data={"title": "test"})\n        self.assertFalse(serializer.is_valid())\n')))}p.isMDXComponent=!0}}]);